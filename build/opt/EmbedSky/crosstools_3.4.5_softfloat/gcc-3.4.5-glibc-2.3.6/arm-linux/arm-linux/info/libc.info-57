This is libc.info, produced by makeinfo version 4.3 from libc.texinfo.

INFO-DIR-SECTION GNU libraries
START-INFO-DIR-ENTRY
* Libc: (libc).                 C library.
END-INFO-DIR-ENTRY

INFO-DIR-SECTION GNU C library functions and macros
START-INFO-DIR-ENTRY
* a64l: (libc)Encode Binary Data.
* abort: (libc)Aborting a Program.
* abs: (libc)Absolute Value.
* accept: (libc)Accepting Connections.
* access: (libc)Testing File Access.
* acosf: (libc)Inverse Trig Functions.
* acoshf: (libc)Hyperbolic Functions.
* acosh: (libc)Hyperbolic Functions.
* acoshl: (libc)Hyperbolic Functions.
* acos: (libc)Inverse Trig Functions.
* acosl: (libc)Inverse Trig Functions.
* addmntent: (libc)mtab.
* addseverity: (libc)Adding Severity Classes.
* adjtime: (libc)High-Resolution Calendar.
* adjtimex: (libc)High-Resolution Calendar.
* aio_cancel64: (libc)Cancel AIO Operations.
* aio_cancel: (libc)Cancel AIO Operations.
* aio_error64: (libc)Status of AIO Operations.
* aio_error: (libc)Status of AIO Operations.
* aio_fsync64: (libc)Synchronizing AIO Operations.
* aio_fsync: (libc)Synchronizing AIO Operations.
* aio_init: (libc)Configuration of AIO.
* aio_read64: (libc)Asynchronous Reads/Writes.
* aio_read: (libc)Asynchronous Reads/Writes.
* aio_return64: (libc)Status of AIO Operations.
* aio_return: (libc)Status of AIO Operations.
* aio_suspend64: (libc)Synchronizing AIO Operations.
* aio_suspend: (libc)Synchronizing AIO Operations.
* aio_write64: (libc)Asynchronous Reads/Writes.
* aio_write: (libc)Asynchronous Reads/Writes.
* alarm: (libc)Setting an Alarm.
* alloca: (libc)Variable Size Automatic.
* alphasort64: (libc)Scanning Directory Content.
* alphasort: (libc)Scanning Directory Content.
* ALTWERASE: (libc)Local Modes.
* ARG_MAX: (libc)General Limits.
* argp_error: (libc)Argp Helper Functions.
* ARGP_ERR_UNKNOWN: (libc)Argp Parser Functions.
* argp_failure: (libc)Argp Helper Functions.
* argp_help: (libc)Argp Help.
* argp_parse: (libc)Argp.
* argp_state_help: (libc)Argp Helper Functions.
* argp_usage: (libc)Argp Helper Functions.
* argz_add: (libc)Argz Functions.
* argz_add_sep: (libc)Argz Functions.
* argz_append: (libc)Argz Functions.
* argz_count: (libc)Argz Functions.
* argz_create: (libc)Argz Functions.
* argz_create_sep: (libc)Argz Functions.
* argz_delete: (libc)Argz Functions.
* argz_extract: (libc)Argz Functions.
* argz_insert: (libc)Argz Functions.
* argz_next: (libc)Argz Functions.
* argz_replace: (libc)Argz Functions.
* argz_stringify: (libc)Argz Functions.
* asctime: (libc)Formatting Calendar Time.
* asctime_r: (libc)Formatting Calendar Time.
* asinf: (libc)Inverse Trig Functions.
* asinhf: (libc)Hyperbolic Functions.
* asinh: (libc)Hyperbolic Functions.
* asinhl: (libc)Hyperbolic Functions.
* asin: (libc)Inverse Trig Functions.
* asinl: (libc)Inverse Trig Functions.
* asprintf: (libc)Dynamic Output.
* assert: (libc)Consistency Checking.
* assert_perror: (libc)Consistency Checking.
* atan2f: (libc)Inverse Trig Functions.
* atan2: (libc)Inverse Trig Functions.
* atan2l: (libc)Inverse Trig Functions.
* atanf: (libc)Inverse Trig Functions.
* atanhf: (libc)Hyperbolic Functions.
* atanh: (libc)Hyperbolic Functions.
* atanhl: (libc)Hyperbolic Functions.
* atan: (libc)Inverse Trig Functions.
* atanl: (libc)Inverse Trig Functions.
* atexit: (libc)Cleanups on Exit.
* atof: (libc)Parsing of Floats.
* atoi: (libc)Parsing of Integers.
* atol: (libc)Parsing of Integers.
* atoll: (libc)Parsing of Integers.
* backtrace: (libc)Backtraces.
* backtrace_symbols_fd: (libc)Backtraces.
* backtrace_symbols: (libc)Backtraces.
* basename: (libc)Finding Tokens in a String.
* basename: (libc)Finding Tokens in a String.
* BC_BASE_MAX: (libc)Utility Limits.
* BC_DIM_MAX: (libc)Utility Limits.
* bcmp: (libc)String/Array Comparison.
* bcopy: (libc)Copying and Concatenation.
* BC_SCALE_MAX: (libc)Utility Limits.
* BC_STRING_MAX: (libc)Utility Limits.
* bind: (libc)Setting Address.
* bind_textdomain_codeset: (libc)Charset conversion in gettext.
* bindtextdomain: (libc)Locating gettext catalog.
* BRKINT: (libc)Input Modes.
* brk: (libc)Resizing the Data Segment.
* bsearch: (libc)Array Search Function.
* btowc: (libc)Converting a Character.
* BUFSIZ: (libc)Controlling Buffering.
* bzero: (libc)Copying and Concatenation.
* cabsf: (libc)Absolute Value.
* cabs: (libc)Absolute Value.
* cabsl: (libc)Absolute Value.
* cacosf: (libc)Inverse Trig Functions.
* cacoshf: (libc)Hyperbolic Functions.
* cacosh: (libc)Hyperbolic Functions.
* cacoshl: (libc)Hyperbolic Functions.
* cacos: (libc)Inverse Trig Functions.
* cacosl: (libc)Inverse Trig Functions.
* calloc: (libc)Allocating Cleared Space.
* canonicalize_file_name: (libc)Symbolic Links.
* cargf: (libc)Operations on Complex.
* carg: (libc)Operations on Complex.
* cargl: (libc)Operations on Complex.
* casinf: (libc)Inverse Trig Functions.
* casinhf: (libc)Hyperbolic Functions.
* casinh: (libc)Hyperbolic Functions.
* casinhl: (libc)Hyperbolic Functions.
* casin: (libc)Inverse Trig Functions.
* casinl: (libc)Inverse Trig Functions.
* catanf: (libc)Inverse Trig Functions.
* catanhf: (libc)Hyperbolic Functions.
* catanh: (libc)Hyperbolic Functions.
* catanhl: (libc)Hyperbolic Functions.
* catan: (libc)Inverse Trig Functions.
* catanl: (libc)Inverse Trig Functions.
* catclose: (libc)The catgets Functions.
* catgets: (libc)The catgets Functions.
* catopen: (libc)The catgets Functions.
* cbc_crypt: (libc)DES Encryption.
* cbrtf: (libc)Exponents and Logarithms.
* cbrt: (libc)Exponents and Logarithms.
* cbrtl: (libc)Exponents and Logarithms.
* ccosf: (libc)Trig Functions.
* ccoshf: (libc)Hyperbolic Functions.
* ccosh: (libc)Hyperbolic Functions.
* ccoshl: (libc)Hyperbolic Functions.
* ccos: (libc)Trig Functions.
* ccosl: (libc)Trig Functions.
* CCTS_OFLOW: (libc)Control Modes.
* ceilf: (libc)Rounding Functions.
* ceil: (libc)Rounding Functions.
* ceill: (libc)Rounding Functions.
* cexpf: (libc)Exponents and Logarithms.
* cexp: (libc)Exponents and Logarithms.
* cexpl: (libc)Exponents and Logarithms.
* cfgetispeed: (libc)Line Speed.
* cfgetospeed: (libc)Line Speed.
* cfmakeraw: (libc)Noncanonical Input.
* cfree: (libc)Freeing after Malloc.
* cfsetispeed: (libc)Line Speed.
* cfsetospeed: (libc)Line Speed.
* cfsetspeed: (libc)Line Speed.
* chdir: (libc)Working Directory.
* CHILD_MAX: (libc)General Limits.
* chmod: (libc)Setting Permissions.
* chown: (libc)File Owner.
* CIGNORE: (libc)Control Modes.
* cimagf: (libc)Operations on Complex.
* cimag: (libc)Operations on Complex.
* cimagl: (libc)Operations on Complex.
* clearenv: (libc)Environment Access.
* clearerr: (libc)Error Recovery.
* clearerr_unlocked: (libc)Error Recovery.
* CLK_TCK: (libc)CPU Time.
* CLOCAL: (libc)Control Modes.
* clock: (libc)CPU Time.
* CLOCKS_PER_SEC: (libc)CPU Time.
* clog10f: (libc)Exponents and Logarithms.
* clog10: (libc)Exponents and Logarithms.
* clog10l: (libc)Exponents and Logarithms.
* clogf: (libc)Exponents and Logarithms.
* clog: (libc)Exponents and Logarithms.
* clogl: (libc)Exponents and Logarithms.
* closedir: (libc)Reading/Closing Directory.
* close: (libc)Opening and Closing Files.
* closelog: (libc)closelog.
* COLL_WEIGHTS_MAX: (libc)Utility Limits.
* _Complex_I: (libc)Complex Numbers.
* confstr: (libc)String Parameters.
* conjf: (libc)Operations on Complex.
* conj: (libc)Operations on Complex.
* conjl: (libc)Operations on Complex.
* connect: (libc)Connecting.
* copysignf: (libc)FP Bit Twiddling.
* copysign: (libc)FP Bit Twiddling.
* copysignl: (libc)FP Bit Twiddling.
* cosf: (libc)Trig Functions.
* coshf: (libc)Hyperbolic Functions.
* cosh: (libc)Hyperbolic Functions.
* coshl: (libc)Hyperbolic Functions.
* cos: (libc)Trig Functions.
* cosl: (libc)Trig Functions.
* cpowf: (libc)Exponents and Logarithms.
* cpow: (libc)Exponents and Logarithms.
* cpowl: (libc)Exponents and Logarithms.
* cprojf: (libc)Operations on Complex.
* cproj: (libc)Operations on Complex.
* cprojl: (libc)Operations on Complex.
* CPU_CLR: (libc)CPU Affinity.
* CPU_ISSET: (libc)CPU Affinity.
* CPU_SET: (libc)CPU Affinity.
* CPU_SETSIZE: (libc)CPU Affinity.
* CPU_ZERO: (libc)CPU Affinity.
* CREAD: (libc)Control Modes.
* crealf: (libc)Operations on Complex.
* creal: (libc)Operations on Complex.
* creall: (libc)Operations on Complex.
* creat64: (libc)Opening and Closing Files.
* creat: (libc)Opening and Closing Files.
* CRTS_IFLOW: (libc)Control Modes.
* crypt: (libc)crypt.
* crypt_r: (libc)crypt.
* CS5: (libc)Control Modes.
* CS6: (libc)Control Modes.
* CS7: (libc)Control Modes.
* CS8: (libc)Control Modes.
* csinf: (libc)Trig Functions.
* csinhf: (libc)Hyperbolic Functions.
* csinh: (libc)Hyperbolic Functions.
* csinhl: (libc)Hyperbolic Functions.
* csin: (libc)Trig Functions.
* csinl: (libc)Trig Functions.
* CSIZE: (libc)Control Modes.
* csqrtf: (libc)Exponents and Logarithms.
* csqrt: (libc)Exponents and Logarithms.
* csqrtl: (libc)Exponents and Logarithms.
* CSTOPB: (libc)Control Modes.
* ctanf: (libc)Trig Functions.
* ctanhf: (libc)Hyperbolic Functions.
* ctanh: (libc)Hyperbolic Functions.
* ctanhl: (libc)Hyperbolic Functions.
* ctan: (libc)Trig Functions.
* ctanl: (libc)Trig Functions.
* ctermid: (libc)Identifying the Terminal.
* ctime: (libc)Formatting Calendar Time.
* ctime_r: (libc)Formatting Calendar Time.
* cuserid: (libc)Who Logged In.
* dcgettext: (libc)Translation with gettext.
* dcngettext: (libc)Advanced gettext functions.
* DES_FAILED: (libc)DES Encryption.
* des_setparity: (libc)DES Encryption.
* dgettext: (libc)Translation with gettext.
* difftime: (libc)Elapsed Time.
* dirfd: (libc)Opening a Directory.
* dirname: (libc)Finding Tokens in a String.
* div: (libc)Integer Division.
* dngettext: (libc)Advanced gettext functions.
* drand48: (libc)SVID Random.
* drand48_r: (libc)SVID Random.
* dremf: (libc)Remainder Functions.
* drem: (libc)Remainder Functions.
* dreml: (libc)Remainder Functions.
* DTTOIF: (libc)Directory Entries.
* dup2: (libc)Duplicating Descriptors.
* dup: (libc)Duplicating Descriptors.
* E2BIG: (libc)Error Codes.
* EACCES: (libc)Error Codes.
* EADDRINUSE: (libc)Error Codes.
* EADDRNOTAVAIL: (libc)Error Codes.
* EADV: (libc)Error Codes.
* EAFNOSUPPORT: (libc)Error Codes.
* EAGAIN: (libc)Error Codes.
* EALREADY: (libc)Error Codes.
* EAUTH: (libc)Error Codes.
* EBACKGROUND: (libc)Error Codes.
* EBADE: (libc)Error Codes.
* EBADFD: (libc)Error Codes.
* EBADF: (libc)Error Codes.
* EBADMSG: (libc)Error Codes.
* EBADR: (libc)Error Codes.
* EBADRPC: (libc)Error Codes.
* EBADRQC: (libc)Error Codes.
* EBADSLT: (libc)Error Codes.
* EBFONT: (libc)Error Codes.
* EBUSY: (libc)Error Codes.
* ECANCELED: (libc)Error Codes.
* ecb_crypt: (libc)DES Encryption.
* ECHILD: (libc)Error Codes.
* ECHOCTL: (libc)Local Modes.
* ECHOE: (libc)Local Modes.
* ECHOKE: (libc)Local Modes.
* ECHOK: (libc)Local Modes.
* ECHO: (libc)Local Modes.
* ECHONL: (libc)Local Modes.
* ECHOPRT: (libc)Local Modes.
* ECHRNG: (libc)Error Codes.
* ECOMM: (libc)Error Codes.
* ECONNABORTED: (libc)Error Codes.
* ECONNREFUSED: (libc)Error Codes.
* ECONNRESET: (libc)Error Codes.
* ecvt: (libc)System V Number Conversion.
* ecvt_r: (libc)System V Number Conversion.
* EDEADLK: (libc)Error Codes.
* EDEADLOCK: (libc)Error Codes.
* EDESTADDRREQ: (libc)Error Codes.
* EDIED: (libc)Error Codes.
* ED: (libc)Error Codes.
* EDOM: (libc)Error Codes.
* EDOTDOT: (libc)Error Codes.
* EDQUOT: (libc)Error Codes.
* EEXIST: (libc)Error Codes.
* EFAULT: (libc)Error Codes.
* EFBIG: (libc)Error Codes.
* EFTYPE: (libc)Error Codes.
* EGRATUITOUS: (libc)Error Codes.
* EGREGIOUS: (libc)Error Codes.
* EHOSTDOWN: (libc)Error Codes.
* EHOSTUNREACH: (libc)Error Codes.
* EIDRM: (libc)Error Codes.
* EIEIO: (libc)Error Codes.
* EILSEQ: (libc)Error Codes.
* EINPROGRESS: (libc)Error Codes.
* EINTR: (libc)Error Codes.
* EINVAL: (libc)Error Codes.
* EIO: (libc)Error Codes.
* EISCONN: (libc)Error Codes.
* EISDIR: (libc)Error Codes.
* EISNAM: (libc)Error Codes.
* EL2HLT: (libc)Error Codes.
* EL2NSYNC: (libc)Error Codes.
* EL3HLT: (libc)Error Codes.
* EL3RST: (libc)Error Codes.
* ELIBACC: (libc)Error Codes.
* ELIBBAD: (libc)Error Codes.
* ELIBEXEC: (libc)Error Codes.
* ELIBMAX: (libc)Error Codes.
* ELIBSCN: (libc)Error Codes.
* ELNRNG: (libc)Error Codes.
* ELOOP: (libc)Error Codes.
* EMEDIUMTYPE: (libc)Error Codes.
* EMFILE: (libc)Error Codes.
* EMLINK: (libc)Error Codes.
* EMSGSIZE: (libc)Error Codes.
* EMULTIHOP: (libc)Error Codes.
* ENAMETOOLONG: (libc)Error Codes.
* ENAVAIL: (libc)Error Codes.
* encrypt: (libc)DES Encryption.
* encrypt_r: (libc)DES Encryption.
* endfsent: (libc)fstab.
* endgrent: (libc)Scanning All Groups.
* endhostent: (libc)Host Names.
* endmntent: (libc)mtab.
* endnetent: (libc)Networks Database.
* endnetgrent: (libc)Lookup Netgroup.
* endprotoent: (libc)Protocols Database.
* endpwent: (libc)Scanning All Users.
* endservent: (libc)Services Database.
* endutent: (libc)Manipulating the Database.
* endutxent: (libc)XPG Functions.
* ENEEDAUTH: (libc)Error Codes.
* ENETDOWN: (libc)Error Codes.
* ENETRESET: (libc)Error Codes.
* ENETUNREACH: (libc)Error Codes.
* ENFILE: (libc)Error Codes.
* ENOANO: (libc)Error Codes.
* ENOBUFS: (libc)Error Codes.
* ENOCSI: (libc)Error Codes.
* ENODATA: (libc)Error Codes.
* ENODEV: (libc)Error Codes.
* ENOENT: (libc)Error Codes.
* ENOEXEC: (libc)Error Codes.
* ENOLCK: (libc)Error Codes.
* ENOLINK: (libc)Error Codes.
* ENOMEDIUM: (libc)Error Codes.
* ENOMEM: (libc)Error Codes.
* ENOMSG: (libc)Error Codes.
* ENONET: (libc)Error Codes.
* ENOPKG: (libc)Error Codes.
* ENOPROTOOPT: (libc)Error Codes.
* ENOSPC: (libc)Error Codes.
* ENOSR: (libc)Error Codes.
* ENOSTR: (libc)Error Codes.
* ENOSYS: (libc)Error Codes.
* ENOTBLK: (libc)Error Codes.
* ENOTCONN: (libc)Error Codes.
* ENOTDIR: (libc)Error Codes.
* ENOTEMPTY: (libc)Error Codes.
* ENOTNAM: (libc)Error Codes.
* ENOTSOCK: (libc)Error Codes.
* ENOTSUP: (libc)Error Codes.
* ENOTTY: (libc)Error Codes.
* ENOTUNIQ: (libc)Error Codes.
* envz_add: (libc)Envz Functions.
* envz_entry: (libc)Envz Functions.
* envz_get: (libc)Envz Functions.
* envz_merge: (libc)Envz Functions.
* envz_strip: (libc)Envz Functions.
* ENXIO: (libc)Error Codes.
* EOF: (libc)EOF and Errors.
* EOPNOTSUPP: (libc)Error Codes.
* EOVERFLOW: (libc)Error Codes.
* EPERM: (libc)Error Codes.
* EPFNOSUPPORT: (libc)Error Codes.
* EPIPE: (libc)Error Codes.
* EPROCLIM: (libc)Error Codes.
* EPROCUNAVAIL: (libc)Error Codes.
* EPROGMISMATCH: (libc)Error Codes.
* EPROGUNAVAIL: (libc)Error Codes.
* EPROTO: (libc)Error Codes.
* EPROTONOSUPPORT: (libc)Error Codes.
* EPROTOTYPE: (libc)Error Codes.
* EQUIV_CLASS_MAX: (libc)Utility Limits.
* erand48: (libc)SVID Random.
* erand48_r: (libc)SVID Random.
* ERANGE: (libc)Error Codes.
* EREMCHG: (libc)Error Codes.
* EREMOTEIO: (libc)Error Codes.
* EREMOTE: (libc)Error Codes.
* ERESTART: (libc)Error Codes.
* erfcf: (libc)Special Functions.
* erfc: (libc)Special Functions.
* erfcl: (libc)Special Functions.
* erff: (libc)Special Functions.
* erf: (libc)Special Functions.
* erfl: (libc)Special Functions.
* EROFS: (libc)Error Codes.
* ERPCMISMATCH: (libc)Error Codes.
* err: (libc)Error Messages.
* errno: (libc)Checking for Errors.
* error_at_line: (libc)Error Messages.
* error: (libc)Error Messages.
* errx: (libc)Error Messages.
* ESHUTDOWN: (libc)Error Codes.
* ESOCKTNOSUPPORT: (libc)Error Codes.
* ESPIPE: (libc)Error Codes.
* ESRCH: (libc)Error Codes.
* ESRMNT: (libc)Error Codes.
* ESTALE: (libc)Error Codes.
* ESTRPIPE: (libc)Error Codes.
* ETIMEDOUT: (libc)Error Codes.
* ETIME: (libc)Error Codes.
* ETOOMANYREFS: (libc)Error Codes.
* ETXTBSY: (libc)Error Codes.
* EUCLEAN: (libc)Error Codes.
* EUNATCH: (libc)Error Codes.
* EUSERS: (libc)Error Codes.
* EWOULDBLOCK: (libc)Error Codes.
* EXDEV: (libc)Error Codes.
* execle: (libc)Executing a File.
* execl: (libc)Executing a File.
* execlp: (libc)Executing a File.
* execve: (libc)Executing a File.
* execv: (libc)Executing a File.
* execvp: (libc)Executing a File.
* EXFULL: (libc)Error Codes.
* EXIT_FAILURE: (libc)Exit Status.
* exit: (libc)Normal Termination.
* _exit: (libc)Termination Internals.
* _Exit: (libc)Termination Internals.
* EXIT_SUCCESS: (libc)Exit Status.
* exp10f: (libc)Exponents and Logarithms.
* exp10: (libc)Exponents and Logarithms.
* exp10l: (libc)Exponents and Logarithms.
* exp2f: (libc)Exponents and Logarithms.
* exp2: (libc)Exponents and Logarithms.
* exp2l: (libc)Exponents and Logarithms.
* expf: (libc)Exponents and Logarithms.
* exp: (libc)Exponents and Logarithms.
* expl: (libc)Exponents and Logarithms.
* expm1f: (libc)Exponents and Logarithms.
* expm1: (libc)Exponents and Logarithms.
* expm1l: (libc)Exponents and Logarithms.
* EXPR_NEST_MAX: (libc)Utility Limits.
* fabsf: (libc)Absolute Value.
* fabs: (libc)Absolute Value.
* fabsl: (libc)Absolute Value.
* __fbufsize: (libc)Controlling Buffering.
* fchdir: (libc)Working Directory.
* fchmod: (libc)Setting Permissions.
* fchown: (libc)File Owner.
* fclean: (libc)Cleaning Streams.
* fcloseall: (libc)Closing Streams.
* fclose: (libc)Closing Streams.
* fcntl: (libc)Control Operations.
* fcvt: (libc)System V Number Conversion.
* fcvt_r: (libc)System V Number Conversion.
* fdatasync: (libc)Synchronizing I/O.
* FD_CLOEXEC: (libc)Descriptor Flags.
* FD_CLR: (libc)Waiting for I/O.
* fdimf: (libc)Misc FP Arithmetic.
* fdim: (libc)Misc FP Arithmetic.
* fdiml: (libc)Misc FP Arithmetic.
* FD_ISSET: (libc)Waiting for I/O.
* fdopen: (libc)Descriptors and Streams.
* FD_SET: (libc)Waiting for I/O.
* FD_SETSIZE: (libc)Waiting for I/O.
* F_DUPFD: (libc)Duplicating Descriptors.
* FD_ZERO: (libc)Waiting for I/O.
* feclearexcept: (libc)Status bit operations.
* fedisableexcept: (libc)Control Functions.
* feenableexcept: (libc)Control Functions.
* fegetenv: (libc)Control Functions.
* fegetexceptflag: (libc)Status bit operations.
* fegetexcept: (libc)Control Functions.
* fegetround: (libc)Rounding.
* feholdexcept: (libc)Control Functions.
* feof: (libc)EOF and Errors.
* feof_unlocked: (libc)EOF and Errors.
* feraiseexcept: (libc)Status bit operations.
* ferror: (libc)EOF and Errors.
* ferror_unlocked: (libc)EOF and Errors.
* fesetenv: (libc)Control Functions.
* fesetexceptflag: (libc)Status bit operations.
* fesetround: (libc)Rounding.
* fetestexcept: (libc)Status bit operations.
* feupdateenv: (libc)Control Functions.
* fflush: (libc)Flushing Buffers.
* fflush_unlocked: (libc)Flushing Buffers.
* fgetc: (libc)Character Input.
* fgetc_unlocked: (libc)Character Input.
* F_GETFD: (libc)Descriptor Flags.
* F_GETFL: (libc)Getting File Status Flags.
* fgetgrent: (libc)Scanning All Groups.
* fgetgrent_r: (libc)Scanning All Groups.
* F_GETLK: (libc)File Locks.
* F_GETOWN: (libc)Interrupt Input.
* fgetpos64: (libc)Portable Positioning.
* fgetpos: (libc)Portable Positioning.
* fgetpwent: (libc)Scanning All Users.
* fgetpwent_r: (libc)Scanning All Users.
* fgets: (libc)Line Input.
* fgets_unlocked: (libc)Line Input.
* fgetwc: (libc)Character Input.
* fgetwc_unlocked: (libc)Character Input.
* fgetws: (libc)Line Input.
* fgetws_unlocked: (libc)Line Input.
* FILENAME_MAX: (libc)Limits for Files.
* fileno: (libc)Descriptors and Streams.
* fileno_unlocked: (libc)Descriptors and Streams.
* finitef: (libc)Floating Point Classes.
* finite: (libc)Floating Point Classes.
* finitel: (libc)Floating Point Classes.
* __flbf: (libc)Controlling Buffering.
* flockfile: (libc)Streams and Threads.
* floorf: (libc)Rounding Functions.
* floor: (libc)Rounding Functions.
* floorl: (libc)Rounding Functions.
* _flushlbf: (libc)Flushing Buffers.
* FLUSHO: (libc)Local Modes.
* fmaf: (libc)Misc FP Arithmetic.
* fma: (libc)Misc FP Arithmetic.
* fmal: (libc)Misc FP Arithmetic.
* fmaxf: (libc)Misc FP Arithmetic.
* fmax: (libc)Misc FP Arithmetic.
* fmaxl: (libc)Misc FP Arithmetic.
* fmemopen: (libc)String Streams.
* fminf: (libc)Misc FP Arithmetic.
* fmin: (libc)Misc FP Arithmetic.
* fminl: (libc)Misc FP Arithmetic.
* fmodf: (libc)Remainder Functions.
* fmod: (libc)Remainder Functions.
* fmodl: (libc)Remainder Functions.
* fmtmsg: (libc)Printing Formatted Messages.
* fnmatch: (libc)Wildcard Matching.
* F_OK: (libc)Testing File Access.
* fopen64: (libc)Opening Streams.
* fopencookie: (libc)Streams and Cookies.
* fopen: (libc)Opening Streams.
* FOPEN_MAX: (libc)Opening Streams.
* fork: (libc)Creating a Process.
* forkpty: (libc)Pseudo-Terminal Pairs.
* fpathconf: (libc)Pathconf.
* fpclassify: (libc)Floating Point Classes.
* __fpending: (libc)Controlling Buffering.
* FP_ILOGB0: (libc)Exponents and Logarithms.
* FP_ILOGBNAN: (libc)Exponents and Logarithms.
* fprintf: (libc)Formatted Output Functions.
* __fpurge: (libc)Flushing Buffers.
* fputc: (libc)Simple Output.
* fputc_unlocked: (libc)Simple Output.
* fputs: (libc)Simple Output.
* fputs_unlocked: (libc)Simple Output.
* fputwc: (libc)Simple Output.
* fputwc_unlocked: (libc)Simple Output.
* fputws: (libc)Simple Output.
* fputws_unlocked: (libc)Simple Output.
* __freadable: (libc)Opening Streams.
* __freading: (libc)Opening Streams.
* fread: (libc)Block Input/Output.
* fread_unlocked: (libc)Block Input/Output.
* free: (libc)Freeing after Malloc.
* freopen64: (libc)Opening Streams.
* freopen: (libc)Opening Streams.
* frexpf: (libc)Normalization Functions.
* frexp: (libc)Normalization Functions.
* frexpl: (libc)Normalization Functions.
* fscanf: (libc)Formatted Input Functions.
* fseek: (libc)File Positioning.
* fseeko64: (libc)File Positioning.
* fseeko: (libc)File Positioning.
* F_SETFD: (libc)Descriptor Flags.
* F_SETFL: (libc)Getting File Status Flags.
* F_SETLK: (libc)File Locks.
* F_SETLKW: (libc)File Locks.
* __fsetlocking: (libc)Streams and Threads.
* F_SETOWN: (libc)Interrupt Input.
* fsetpos64: (libc)Portable Positioning.
* fsetpos: (libc)Portable Positioning.
* fstat64: (libc)Reading Attributes.
* fstat: (libc)Reading Attributes.
* fsync: (libc)Synchronizing I/O.
* ftell: (libc)File Positioning.
* ftello64: (libc)File Positioning.
* ftello: (libc)File Positioning.
* ftruncate64: (libc)File Size.
* ftruncate: (libc)File Size.
* ftrylockfile: (libc)Streams and Threads.
* ftw64: (libc)Working with Directory Trees.
* ftw: (libc)Working with Directory Trees.
* funlockfile: (libc)Streams and Threads.
* futimes: (libc)File Times.
* fwide: (libc)Streams and I18N.
* fwprintf: (libc)Formatted Output Functions.
* __fwritable: (libc)Opening Streams.
* fwrite: (libc)Block Input/Output.
* fwrite_unlocked: (libc)Block Input/Output.
* __fwriting: (libc)Opening Streams.
* fwscanf: (libc)Formatted Input Functions.
* gammaf: (libc)Special Functions.
* gamma: (libc)Special Functions.
* gammal: (libc)Special Functions.
* __gconv_end_fct: (libc)glibc iconv Implementation.
* __gconv_fct: (libc)glibc iconv Implementation.
* __gconv_init_fct: (libc)glibc iconv Implementation.
* gcvt: (libc)System V Number Conversion.
* get_avphys_pages: (libc)Query Memory Parameters.
* getchar: (libc)Character Input.
* getchar_unlocked: (libc)Character Input.
* getc: (libc)Character Input.
* getcontext: (libc)System V contexts.
* getc_unlocked: (libc)Character Input.
* get_current_dir_name: (libc)Working Directory.
* getcwd: (libc)Working Directory.
* getdate: (libc)General Time String Parsing.
* getdate_r: (libc)General Time String Parsing.
* getdelim: (libc)Line Input.
* getdomainnname: (libc)Host Identification.
* getegid: (libc)Reading Persona.
* getenv: (libc)Environment Access.
* geteuid: (libc)Reading Persona.
* getfsent: (libc)fstab.
* getfsfile: (libc)fstab.
* getfsspec: (libc)fstab.
* getgid: (libc)Reading Persona.
* getgrent: (libc)Scanning All Groups.
* getgrent_r: (libc)Scanning All Groups.
* getgrgid: (libc)Lookup Group.
* getgrgid_r: (libc)Lookup Group.
* getgrnam: (libc)Lookup Group.
* getgrnam_r: (libc)Lookup Group.
* getgrouplist: (libc)Setting Groups.
* getgroups: (libc)Reading Persona.
* gethostbyaddr: (libc)Host Names.
* gethostbyaddr_r: (libc)Host Names.
* gethostbyname2: (libc)Host Names.
* gethostbyname2_r: (libc)Host Names.
* gethostbyname: (libc)Host Names.
* gethostbyname_r: (libc)Host Names.
* gethostent: (libc)Host Names.
* gethostid: (libc)Host Identification.
* gethostname: (libc)Host Identification.
* getitimer: (libc)Setting an Alarm.
* getline: (libc)Line Input.
* getloadavg: (libc)Processor Resources.
* getlogin: (libc)Who Logged In.
* getmntent: (libc)mtab.
* getmntent_r: (libc)mtab.
* getnetbyaddr: (libc)Networks Database.
* getnetbyname: (libc)Networks Database.
* getnetent: (libc)Networks Database.
* getnetgrent: (libc)Lookup Netgroup.
* getnetgrent_r: (libc)Lookup Netgroup.
* get_nprocs_conf: (libc)Processor Resources.
* get_nprocs: (libc)Processor Resources.
* getopt: (libc)Using Getopt.
* getopt_long: (libc)Getopt Long Options.
* getopt_long_only: (libc)Getopt Long Options.
* getpagesize: (libc)Query Memory Parameters.
* getpass: (libc)getpass.
* getpeername: (libc)Who is Connected.
* getpgid: (libc)Process Group Functions.
* getpgrp: (libc)Process Group Functions.
* getpgrp: (libc)Process Group Functions.
* get_phys_pages: (libc)Query Memory Parameters.
* getpid: (libc)Process Identification.
* getppid: (libc)Process Identification.
* getpriority: (libc)Traditional Scheduling Functions.
* getprotobyname: (libc)Protocols Database.
* getprotobynumber: (libc)Protocols Database.
* getprotoent: (libc)Protocols Database.
* getpt: (libc)Allocation.
* getpwent: (libc)Scanning All Users.
* getpwent_r: (libc)Scanning All Users.
* getpwnam: (libc)Lookup User.
* getpwnam_r: (libc)Lookup User.
* getpwuid: (libc)Lookup User.
* getpwuid_r: (libc)Lookup User.
* getrlimit64: (libc)Limits on Resources.
* getrlimit: (libc)Limits on Resources.
* getrusage: (libc)Resource Usage.
* getservbyname: (libc)Services Database.
* getservbyport: (libc)Services Database.
* getservent: (libc)Services Database.
* getsid: (libc)Process Group Functions.
* gets: (libc)Line Input.
* getsockname: (libc)Reading Address.
* getsockopt: (libc)Socket Option Functions.
* getsubopt: (libc)Suboptions.
* gettext: (libc)Translation with gettext.
* gettimeofday: (libc)High-Resolution Calendar.
* getuid: (libc)Reading Persona.
* getumask: (libc)Setting Permissions.
* getutent: (libc)Manipulating the Database.
* getutent_r: (libc)Manipulating the Database.
* getutid: (libc)Manipulating the Database.
* getutid_r: (libc)Manipulating the Database.
* getutline: (libc)Manipulating the Database.
* getutline_r: (libc)Manipulating the Database.
* getutmp: (libc)XPG Functions.
* getutmpx: (libc)XPG Functions.
* getutxent: (libc)XPG Functions.
* getutxid: (libc)XPG Functions.
* getutxline: (libc)XPG Functions.
* getwchar: (libc)Character Input.
* getwchar_unlocked: (libc)Character Input.
* getwc: (libc)Character Input.
* getwc_unlocked: (libc)Character Input.
* getwd: (libc)Working Directory.
* getw: (libc)Character Input.
* glob64: (libc)Calling Glob.
* globfree64: (libc)More Flags for Globbing.
* globfree: (libc)More Flags for Globbing.
* glob: (libc)Calling Glob.
* gmtime: (libc)Broken-down Time.
* gmtime_r: (libc)Broken-down Time.
* grantpt: (libc)Allocation.
* gsignal: (libc)Signaling Yourself.
* gtty: (libc)BSD Terminal Modes.
* hasmntopt: (libc)mtab.
* hcreate: (libc)Hash Search Function.
* hcreate_r: (libc)Hash Search Function.
* hdestroy: (libc)Hash Search Function.
* hdestroy_r: (libc)Hash Search Function.
* hsearch: (libc)Hash Search Function.
* hsearch_r: (libc)Hash Search Function.
* htonl: (libc)Byte Order.
* htons: (libc)Byte Order.
* HUGE_VALF: (libc)Math Error Reporting.
* HUGE_VAL: (libc)Math Error Reporting.
* HUGE_VALL: (libc)Math Error Reporting.
* HUPCL: (libc)Control Modes.
* hypotf: (libc)Exponents and Logarithms.
* hypot: (libc)Exponents and Logarithms.
* hypotl: (libc)Exponents and Logarithms.
* ICANON: (libc)Local Modes.
* iconv_close: (libc)Generic Conversion Interface.
* iconv: (libc)Generic Conversion Interface.
* iconv_open: (libc)Generic Conversion Interface.
* ICRNL: (libc)Input Modes.
* IEXTEN: (libc)Local Modes.
* if_freenameindex: (libc)Interface Naming.
* if_indextoname: (libc)Interface Naming.
* if_nameindex: (libc)Interface Naming.
* if_nametoindex: (libc)Interface Naming.
* IFNAMSIZ: (libc)Interface Naming.
* IFTODT: (libc)Directory Entries.
* IGNBRK: (libc)Input Modes.
* IGNCR: (libc)Input Modes.
* IGNPAR: (libc)Input Modes.
* I: (libc)Complex Numbers.
* ilogbf: (libc)Exponents and Logarithms.
* ilogb: (libc)Exponents and Logarithms.
* ilogbl: (libc)Exponents and Logarithms.
* _Imaginary_I: (libc)Complex Numbers.
* imaxabs: (libc)Absolute Value.
* IMAXBEL: (libc)Input Modes.
* imaxdiv: (libc)Integer Division.
* in6addr_any: (libc)Host Address Data Type.
* in6addr_loopback: (libc)Host Address Data Type.
* INADDR_ANY: (libc)Host Address Data Type.
* INADDR_BROADCAST: (libc)Host Address Data Type.
* INADDR_LOOPBACK: (libc)Host Address Data Type.
* INADDR_NONE: (libc)Host Address Data Type.
* index: (libc)Search Functions.
* inet_addr: (libc)Host Address Functions.
* inet_aton: (libc)Host Address Functions.
* inet_lnaof: (libc)Host Address Functions.
* inet_makeaddr: (libc)Host Address Functions.
* inet_netof: (libc)Host Address Functions.
* inet_network: (libc)Host Address Functions.
* inet_ntoa: (libc)Host Address Functions.
* inet_ntop: (libc)Host Address Functions.
* inet_pton: (libc)Host Address Functions.
* INFINITY: (libc)Infinity and NaN.
* initgroups: (libc)Setting Groups.
* initstate: (libc)BSD Random.
* initstate_r: (libc)BSD Random.
* INLCR: (libc)Input Modes.
* innetgr: (libc)Netgroup Membership.
* INPCK: (libc)Input Modes.
* ioctl: (libc)IOCTLs.
* _IOFBF: (libc)Controlling Buffering.
* _IOLBF: (libc)Controlling Buffering.
* _IONBF: (libc)Controlling Buffering.
* IPPORT_RESERVED: (libc)Ports.
* IPPORT_USERRESERVED: (libc)Ports.
* isalnum: (libc)Classification of Characters.
* isalpha: (libc)Classification of Characters.
* isascii: (libc)Classification of Characters.
* isatty: (libc)Is It a Terminal.
* isblank: (libc)Classification of Characters.
* iscntrl: (libc)Classification of Characters.
* isdigit: (libc)Classification of Characters.
* isfinite: (libc)Floating Point Classes.
* isgraph: (libc)Classification of Characters.
* isgreaterequal: (libc)FP Comparison Functions.
* isgreater: (libc)FP Comparison Functions.
* ISIG: (libc)Local Modes.
* isinff: (libc)Floating Point Classes.
* isinf: (libc)Floating Point Classes.
* isinfl: (libc)Floating Point Classes.
* islessequal: (libc)FP Comparison Functions.
* islessgreater: (libc)FP Comparison Functions.
* isless: (libc)FP Comparison Functions.
* islower: (libc)Classification of Characters.
* isnanf: (libc)Floating Point Classes.
* isnan: (libc)Floating Point Classes.
* isnan: (libc)Floating Point Classes.
* isnanl: (libc)Floating Point Classes.
* isnormal: (libc)Floating Point Classes.
* isprint: (libc)Classification of Characters.
* ispunct: (libc)Classification of Characters.
* isspace: (libc)Classification of Characters.
* ISTRIP: (libc)Input Modes.
* isunordered: (libc)FP Comparison Functions.
* isupper: (libc)Classification of Characters.
* iswalnum: (libc)Classification of Wide Characters.
* iswalpha: (libc)Classification of Wide Characters.
* iswblank: (libc)Classification of Wide Characters.
* iswcntrl: (libc)Classification of Wide Characters.
* iswctype: (libc)Classification of Wide Characters.
* iswdigit: (libc)Classification of Wide Characters.
* iswgraph: (libc)Classification of Wide Characters.
* iswlower: (libc)Classification of Wide Characters.
* iswprint: (libc)Classification of Wide Characters.
* iswpunct: (libc)Classification of Wide Characters.
* iswspace: (libc)Classification of Wide Characters.
* iswupper: (libc)Classification of Wide Characters.
* iswxdigit: (libc)Classification of Wide Characters.
* isxdigit: (libc)Classification of Characters.
* IXANY: (libc)Input Modes.
* IXOFF: (libc)Input Modes.
* IXON: (libc)Input Modes.
* j0f: (libc)Special Functions.
* j0: (libc)Special Functions.
* j0l: (libc)Special Functions.
* j1f: (libc)Special Functions.
* j1: (libc)Special Functions.
* j1l: (libc)Special Functions.
* jnf: (libc)Special Functions.
* jn: (libc)Special Functions.
* jnl: (libc)Special Functions.
* jrand48: (libc)SVID Random.
* jrand48_r: (libc)SVID Random.
* kill: (libc)Signaling Another Process.
* killpg: (libc)Signaling Another Process.
* l64a: (libc)Encode Binary Data.
* labs: (libc)Absolute Value.
* lcong48: (libc)SVID Random.
* lcong48_r: (libc)SVID Random.
* L_ctermid: (libc)Identifying the Terminal.
* L_cuserid: (libc)Who Logged In.
* ldexpf: (libc)Normalization Functions.
* ldexp: (libc)Normalization Functions.
* ldexpl: (libc)Normalization Functions.
* ldiv: (libc)Integer Division.
* lfind: (libc)Array Search Function.
* lgammaf: (libc)Special Functions.
* lgammaf_r: (libc)Special Functions.
* lgamma: (libc)Special Functions.
* lgammal: (libc)Special Functions.
* lgammal_r: (libc)Special Functions.
* lgamma_r: (libc)Special Functions.
* LINE_MAX: (libc)Utility Limits.
* link: (libc)Hard Links.
* LINK_MAX: (libc)Limits for Files.
* lio_listio64: (libc)Asynchronous Reads/Writes.
* lio_listio: (libc)Asynchronous Reads/Writes.
* listen: (libc)Listening.
* llabs: (libc)Absolute Value.
* lldiv: (libc)Integer Division.
* llrintf: (libc)Rounding Functions.
* llrint: (libc)Rounding Functions.
* llrintl: (libc)Rounding Functions.
* llroundf: (libc)Rounding Functions.
* llround: (libc)Rounding Functions.
* llroundl: (libc)Rounding Functions.
* localeconv: (libc)The Lame Way to Locale Data.
* localtime: (libc)Broken-down Time.
* localtime_r: (libc)Broken-down Time.
* log10f: (libc)Exponents and Logarithms.
* log10: (libc)Exponents and Logarithms.
* log10l: (libc)Exponents and Logarithms.
* log1pf: (libc)Exponents and Logarithms.
* log1p: (libc)Exponents and Logarithms.
* log1pl: (libc)Exponents and Logarithms.
* log2f: (libc)Exponents and Logarithms.
* log2: (libc)Exponents and Logarithms.
* log2l: (libc)Exponents and Logarithms.
* logbf: (libc)Exponents and Logarithms.
* logb: (libc)Exponents and Logarithms.
* logbl: (libc)Exponents and Logarithms.
* logf: (libc)Exponents and Logarithms.
* login: (libc)Logging In and Out.
* login_tty: (libc)Logging In and Out.
* log: (libc)Exponents and Logarithms.
* logl: (libc)Exponents and Logarithms.
* logout: (libc)Logging In and Out.
* logwtmp: (libc)Logging In and Out.
* longjmp: (libc)Non-Local Details.
* lrand48: (libc)SVID Random.
* lrand48_r: (libc)SVID Random.
* lrintf: (libc)Rounding Functions.
* lrint: (libc)Rounding Functions.
* lrintl: (libc)Rounding Functions.
* lroundf: (libc)Rounding Functions.
* lround: (libc)Rounding Functions.
* lroundl: (libc)Rounding Functions.
* lsearch: (libc)Array Search Function.
* lseek64: (libc)File Position Primitive.
* lseek: (libc)File Position Primitive.
* lstat64: (libc)Reading Attributes.
* lstat: (libc)Reading Attributes.
* L_tmpnam: (libc)Temporary Files.
* lutimes: (libc)File Times.
* madvise: (libc)Memory-mapped I/O.
* makecontext: (libc)System V contexts.
* mallinfo: (libc)Statistics of Malloc.
* malloc: (libc)Basic Allocation.
* mallopt: (libc)Malloc Tunable Parameters.
* MAX_CANON: (libc)Limits for Files.
* MAX_INPUT: (libc)Limits for Files.
* MAXNAMLEN: (libc)Limits for Files.
* MAXSYMLINKS: (libc)Symbolic Links.
* MB_CUR_MAX: (libc)Selecting the Conversion.
* mblen: (libc)Non-reentrant Character Conversion.
* MB_LEN_MAX: (libc)Selecting the Conversion.
* mbrlen: (libc)Converting a Character.
* mbrtowc: (libc)Converting a Character.
* mbsinit: (libc)Keeping the state.
* mbsnrtowcs: (libc)Converting Strings.
* mbsrtowcs: (libc)Converting Strings.
* mbstowcs: (libc)Non-reentrant String Conversion.
* mbtowc: (libc)Non-reentrant Character Conversion.
* mcheck: (libc)Heap Consistency Checking.
* MDMBUF: (libc)Control Modes.
* memalign: (libc)Aligned Memory Blocks.
* memccpy: (libc)Copying and Concatenation.
* memchr: (libc)Search Functions.
* memcmp: (libc)String/Array Comparison.
* memcpy: (libc)Copying and Concatenation.
* memfrob: (libc)Trivial Encryption.
* memmem: (libc)Search Functions.
* memmove: (libc)Copying and Concatenation.
* mempcpy: (libc)Copying and Concatenation.
* memrchr: (libc)Search Functions.
* memset: (libc)Copying and Concatenation.
* mkdir: (libc)Creating Directories.
* mkdtemp: (libc)Temporary Files.
* mkfifo: (libc)FIFO Special Files.
* mknod: (libc)Making Special Files.
* mkstemp: (libc)Temporary Files.
* mktemp: (libc)Temporary Files.
* mktime: (libc)Broken-down Time.
* mlockall: (libc)Page Lock Functions.
* mlock: (libc)Page Lock Functions.
* mmap64: (libc)Memory-mapped I/O.
* mmap: (libc)Memory-mapped I/O.
* modff: (libc)Rounding Functions.
* modf: (libc)Rounding Functions.
* modfl: (libc)Rounding Functions.
* mount: (libc)Mount-Unmount-Remount.
* mprobe: (libc)Heap Consistency Checking.
* mrand48: (libc)SVID Random.
* mrand48_r: (libc)SVID Random.
* mremap: (libc)Memory-mapped I/O.
* MSG_DONTROUTE: (libc)Socket Data Options.
* MSG_OOB: (libc)Socket Data Options.
* MSG_PEEK: (libc)Socket Data Options.
* msync: (libc)Memory-mapped I/O.
* mtrace: (libc)Tracing malloc.
* munlockall: (libc)Page Lock Functions.
* munlock: (libc)Page Lock Functions.
* munmap: (libc)Memory-mapped I/O.
* muntrace: (libc)Tracing malloc.
* NAME_MAX: (libc)Limits for Files.
* nanf: (libc)FP Bit Twiddling.
* nan: (libc)FP Bit Twiddling.
* NAN: (libc)Infinity and NaN.
* nanl: (libc)FP Bit Twiddling.
* nanosleep: (libc)Sleeping.
* NCCS: (libc)Mode Data Types.
* nearbyintf: (libc)Rounding Functions.
* nearbyint: (libc)Rounding Functions.
* nearbyintl: (libc)Rounding Functions.
* nextafterf: (libc)FP Bit Twiddling.
* nextafter: (libc)FP Bit Twiddling.
* nextafterl: (libc)FP Bit Twiddling.
* nexttowardf: (libc)FP Bit Twiddling.
* nexttoward: (libc)FP Bit Twiddling.
* nexttowardl: (libc)FP Bit Twiddling.
* nftw64: (libc)Working with Directory Trees.
* nftw: (libc)Working with Directory Trees.
* ngettext: (libc)Advanced gettext functions.
* NGROUPS_MAX: (libc)General Limits.
* nice: (libc)Traditional Scheduling Functions.
* nl_langinfo: (libc)The Elegant and Fast Way.
* NOFLSH: (libc)Local Modes.
* NOKERNINFO: (libc)Local Modes.
* nrand48: (libc)SVID Random.
* nrand48_r: (libc)SVID Random.
* NSIG: (libc)Standard Signals.
* ntohl: (libc)Byte Order.
* ntohs: (libc)Byte Order.
* ntp_adjtime: (libc)High Accuracy Clock.
* ntp_gettime: (libc)High Accuracy Clock.
* NULL: (libc)Null Pointer Constant.
* O_ACCMODE: (libc)Access Modes.
* O_APPEND: (libc)Operating Modes.
* O_ASYNC: (libc)Operating Modes.
* obstack_1grow_fast: (libc)Extra Fast Growing.
* obstack_1grow: (libc)Growing Objects.
* obstack_alignment_mask: (libc)Obstacks Data Alignment.
* obstack_alloc: (libc)Allocation in an Obstack.
* obstack_base: (libc)Status of an Obstack.
* obstack_blank_fast: (libc)Extra Fast Growing.
* obstack_blank: (libc)Growing Objects.
* obstack_chunk_size: (libc)Obstack Chunks.
* obstack_copy0: (libc)Allocation in an Obstack.
* obstack_copy: (libc)Allocation in an Obstack.
* obstack_finish: (libc)Growing Objects.
* obstack_free: (libc)Freeing Obstack Objects.
* obstack_grow0: (libc)Growing Objects.
* obstack_grow: (libc)Growing Objects.
* obstack_init: (libc)Preparing for Obstacks.
* obstack_int_grow_fast: (libc)Extra Fast Growing.
* obstack_int_grow: (libc)Growing Objects.
* obstack_next_free: (libc)Status of an Obstack.
* obstack_object_size: (libc)Growing Objects.
* obstack_object_size: (libc)Status of an Obstack.
* obstack_printf: (libc)Dynamic Output.
* obstack_ptr_grow_fast: (libc)Extra Fast Growing.
* obstack_ptr_grow: (libc)Growing Objects.
* obstack_room: (libc)Extra Fast Growing.
* obstack_vprintf: (libc)Variable Arguments Output.
* O_CREAT: (libc)Open-time Flags.
* O_EXCL: (libc)Open-time Flags.
* O_EXEC: (libc)Access Modes.
* O_EXLOCK: (libc)Open-time Flags.
* offsetof: (libc)Structure Measurement.
* O_FSYNC: (libc)Operating Modes.
* O_IGNORE_CTTY: (libc)Open-time Flags.
* O_NDELAY: (libc)Operating Modes.
* on_exit: (libc)Cleanups on Exit.
* ONLCR: (libc)Output Modes.
* O_NOATIME: (libc)Operating Modes.
* O_NOCTTY: (libc)Open-time Flags.
* ONOEOT: (libc)Output Modes.
* O_NOLINK: (libc)Open-time Flags.
* O_NONBLOCK: (libc)Open-time Flags.
* O_NONBLOCK: (libc)Operating Modes.
* O_NOTRANS: (libc)Open-time Flags.
* open64: (libc)Opening and Closing Files.
* opendir: (libc)Opening a Directory.
* open: (libc)Opening and Closing Files.
* openlog: (libc)openlog.
* OPEN_MAX: (libc)General Limits.
* open_memstream: (libc)String Streams.
* open_obstack_stream: (libc)Obstack Streams.
* openpty: (libc)Pseudo-Terminal Pairs.
* OPOST: (libc)Output Modes.
* O_RDONLY: (libc)Access Modes.
* O_RDWR: (libc)Access Modes.
* O_READ: (libc)Access Modes.
* O_SHLOCK: (libc)Open-time Flags.
* O_SYNC: (libc)Operating Modes.
* O_TRUNC: (libc)Open-time Flags.
* O_WRITE: (libc)Access Modes.
* O_WRONLY: (libc)Access Modes.
* OXTABS: (libc)Output Modes.
* PA_FLAG_MASK: (libc)Parsing a Template String.
* PARENB: (libc)Control Modes.
* PARMRK: (libc)Input Modes.
* PARODD: (libc)Control Modes.
* parse_printf_format: (libc)Parsing a Template String.
* pathconf: (libc)Pathconf.
* PATH_MAX: (libc)Limits for Files.
* _PATH_UTMP: (libc)Manipulating the Database.
* _PATH_WTMP: (libc)Manipulating the Database.
* pause: (libc)Using Pause.
* pclose: (libc)Pipe to a Subprocess.
* PENDIN: (libc)Local Modes.
* perror: (libc)Error Messages.
* PF_FILE: (libc)Local Namespace Details.
* PF_INET6: (libc)Internet Namespace.
* PF_INET: (libc)Internet Namespace.
* PF_LOCAL: (libc)Local Namespace Details.
* PF_UNIX: (libc)Local Namespace Details.
* PIPE_BUF: (libc)Limits for Files.
* pipe: (libc)Creating a Pipe.
* popen: (libc)Pipe to a Subprocess.
* _POSIX2_C_DEV: (libc)System Options.
* _POSIX2_C_VERSION: (libc)Version Supported.
* _POSIX2_FORT_DEV: (libc)System Options.
* _POSIX2_FORT_RUN: (libc)System Options.
* _POSIX2_LOCALEDEF: (libc)System Options.
* _POSIX2_SW_DEV: (libc)System Options.
* _POSIX_CHOWN_RESTRICTED: (libc)Options for Files.
* _POSIX_JOB_CONTROL: (libc)System Options.
* posix_memalign: (libc)Aligned Memory Blocks.
* _POSIX_NO_TRUNC: (libc)Options for Files.
* _POSIX_SAVED_IDS: (libc)System Options.
* _POSIX_VDISABLE: (libc)Options for Files.
* _POSIX_VERSION: (libc)Version Supported.
* pow10f: (libc)Exponents and Logarithms.
* pow10: (libc)Exponents and Logarithms.
* pow10l: (libc)Exponents and Logarithms.
* powf: (libc)Exponents and Logarithms.
* pow: (libc)Exponents and Logarithms.
* powl: (libc)Exponents and Logarithms.
* pread64: (libc)I/O Primitives.
* pread: (libc)I/O Primitives.
* printf: (libc)Formatted Output Functions.
* printf_size_info: (libc)Predefined Printf Handlers.
* printf_size: (libc)Predefined Printf Handlers.
* psignal: (libc)Signal Messages.
* P_tmpdir: (libc)Temporary Files.
* ptsname: (libc)Allocation.
* ptsname_r: (libc)Allocation.
* putchar: (libc)Simple Output.
* putchar_unlocked: (libc)Simple Output.
* putc: (libc)Simple Output.
* putc_unlocked: (libc)Simple Output.
* putenv: (libc)Environment Access.
* putpwent: (libc)Writing a User Entry.
* puts: (libc)Simple Output.
* pututline: (libc)Manipulating the Database.
* pututxline: (libc)XPG Functions.
* putwchar: (libc)Simple Output.
* putwchar_unlocked: (libc)Simple Output.
* putwc: (libc)Simple Output.
* putwc_unlocked: (libc)Simple Output.
* putw: (libc)Simple Output.
* pwrite64: (libc)I/O Primitives.
* pwrite: (libc)I/O Primitives.
* qecvt: (libc)System V Number Conversion.
* qecvt_r: (libc)System V Number Conversion.
* qfcvt: (libc)System V Number Conversion.
* qfcvt_r: (libc)System V Number Conversion.
* qgcvt: (libc)System V Number Conversion.
* qsort: (libc)Array Sort Function.
* raise: (libc)Signaling Yourself.
* rand: (libc)ISO Random.
* RAND_MAX: (libc)ISO Random.
* random: (libc)BSD Random.
* random_r: (libc)BSD Random.
* rand_r: (libc)ISO Random.
* rawmemchr: (libc)Search Functions.
* readdir64: (libc)Reading/Closing Directory.
* readdir64_r: (libc)Reading/Closing Directory.
* readdir: (libc)Reading/Closing Directory.
* readdir_r: (libc)Reading/Closing Directory.
* read: (libc)I/O Primitives.
* readlink: (libc)Symbolic Links.
* readv: (libc)Scatter-Gather.
* realloc: (libc)Changing Block Size.
* realpath: (libc)Symbolic Links.
* recvfrom: (libc)Receiving Datagrams.
* recv: (libc)Receiving Data.
* recvmsg: (libc)Receiving Datagrams.
* RE_DUP_MAX: (libc)General Limits.
* regcomp: (libc)POSIX Regexp Compilation.
* regerror: (libc)Regexp Cleanup.
* regexec: (libc)Matching POSIX Regexps.
* regfree: (libc)Regexp Cleanup.
* register_printf_function: (libc)Registering New Conversions.
* remainderf: (libc)Remainder Functions.
* remainder: (libc)Remainder Functions.
* remainderl: (libc)Remainder Functions.
* remove: (libc)Deleting Files.
* rename: (libc)Renaming Files.
* rewinddir: (libc)Random Access Directory.
* rewind: (libc)File Positioning.
* rindex: (libc)Search Functions.
* rintf: (libc)Rounding Functions.
* rint: (libc)Rounding Functions.
* rintl: (libc)Rounding Functions.
* RLIM_INFINITY: (libc)Limits on Resources.
* rmdir: (libc)Deleting Files.
* R_OK: (libc)Testing File Access.
* roundf: (libc)Rounding Functions.
* round: (libc)Rounding Functions.
* roundl: (libc)Rounding Functions.
* rpmatch: (libc)Yes-or-No Questions.
* SA_NOCLDSTOP: (libc)Flags for Sigaction.
* SA_ONSTACK: (libc)Flags for Sigaction.
* SA_RESTART: (libc)Flags for Sigaction.
* sbrk: (libc)Resizing the Data Segment.
* scalbf: (libc)Normalization Functions.
* scalb: (libc)Normalization Functions.
* scalbl: (libc)Normalization Functions.
* scalblnf: (libc)Normalization Functions.
* scalbln: (libc)Normalization Functions.
* scalblnl: (libc)Normalization Functions.
* scalbnf: (libc)Normalization Functions.
* scalbn: (libc)Normalization Functions.
* scalbnl: (libc)Normalization Functions.
* scandir64: (libc)Scanning Directory Content.
* scandir: (libc)Scanning Directory Content.
* scanf: (libc)Formatted Input Functions.
* sched_getaffinity: (libc)CPU Affinity.
* sched_getparam: (libc)Basic Scheduling Functions.
* sched_get_priority_max: (libc)Basic Scheduling Functions.
* sched_get_priority_min: (libc)Basic Scheduling Functions.
* sched_getscheduler: (libc)Basic Scheduling Functions.
* sched_rr_get_interval: (libc)Basic Scheduling Functions.
* sched_setaffinity: (libc)CPU Affinity.
* sched_setparam: (libc)Basic Scheduling Functions.
* sched_setscheduler: (libc)Basic Scheduling Functions.
* sched_yield: (libc)Basic Scheduling Functions.
* seed48: (libc)SVID Random.
* seed48_r: (libc)SVID Random.
* SEEK_CUR: (libc)File Positioning.
* seekdir: (libc)Random Access Directory.
* SEEK_END: (libc)File Positioning.
* SEEK_SET: (libc)File Positioning.
* select: (libc)Waiting for I/O.
* send: (libc)Sending Data.
* sendmsg: (libc)Receiving Datagrams.
* sendto: (libc)Sending Datagrams.
* setbuffer: (libc)Controlling Buffering.
* setbuf: (libc)Controlling Buffering.
* setcontext: (libc)System V contexts.
* setdomainname: (libc)Host Identification.
* setegid: (libc)Setting Groups.
* setenv: (libc)Environment Access.
* seteuid: (libc)Setting User ID.
* setfsent: (libc)fstab.
* setgid: (libc)Setting Groups.
* setgrent: (libc)Scanning All Groups.
* setgroups: (libc)Setting Groups.
* sethostent: (libc)Host Names.
* sethostid: (libc)Host Identification.
* sethostname: (libc)Host Identification.
* setitimer: (libc)Setting an Alarm.
* setjmp: (libc)Non-Local Details.
* setkey: (libc)DES Encryption.
* setkey_r: (libc)DES Encryption.
* setlinebuf: (libc)Controlling Buffering.
* setlocale: (libc)Setting the Locale.
* setlogmask: (libc)setlogmask.
* setmntent: (libc)mtab.
* setnetent: (libc)Networks Database.
* setnetgrent: (libc)Lookup Netgroup.
* setpgid: (libc)Process Group Functions.
* setpgrp: (libc)Process Group Functions.
* setpriority: (libc)Traditional Scheduling Functions.
* setprotoent: (libc)Protocols Database.
* setpwent: (libc)Scanning All Users.
* setregid: (libc)Setting Groups.
* setreuid: (libc)Setting User ID.
* setrlimit64: (libc)Limits on Resources.
* setrlimit: (libc)Limits on Resources.
* setservent: (libc)Services Database.
* setsid: (libc)Process Group Functions.
* setsockopt: (libc)Socket Option Functions.
* setstate: (libc)BSD Random.
* setstate_r: (libc)BSD Random.
* settimeofday: (libc)High-Resolution Calendar.
* setuid: (libc)Setting User ID.
* setutent: (libc)Manipulating the Database.
* setutxent: (libc)XPG Functions.
* setvbuf: (libc)Controlling Buffering.
* shutdown: (libc)Closing a Socket.
* S_IFMT: (libc)Testing File Type.
* SIGABRT: (libc)Program Error Signals.
* sigaction: (libc)Advanced Signal Handling.
* sigaddset: (libc)Signal Sets.
* SIGALRM: (libc)Alarm Signals.
* sigaltstack: (libc)Signal Stack.
* sigblock: (libc)Blocking in BSD.
* SIGBUS: (libc)Program Error Signals.
* SIGCHLD: (libc)Job Control Signals.
* SIGCLD: (libc)Job Control Signals.
* SIGCONT: (libc)Job Control Signals.
* sigdelset: (libc)Signal Sets.
* sigemptyset: (libc)Signal Sets.
* SIGEMT: (libc)Program Error Signals.
* SIG_ERR: (libc)Basic Signal Handling.
* sigfillset: (libc)Signal Sets.
* SIGFPE: (libc)Program Error Signals.
* SIGHUP: (libc)Termination Signals.
* SIGILL: (libc)Program Error Signals.
* SIGINFO: (libc)Miscellaneous Signals.
* siginterrupt: (libc)BSD Handler.
* SIGINT: (libc)Termination Signals.
* SIGIO: (libc)Asynchronous I/O Signals.
* SIGIOT: (libc)Program Error Signals.
* sigismember: (libc)Signal Sets.
* SIGKILL: (libc)Termination Signals.
* siglongjmp: (libc)Non-Local Exits and Signals.
* SIGLOST: (libc)Operation Error Signals.
* sigmask: (libc)Blocking in BSD.
* signal: (libc)Basic Signal Handling.
* signbit: (libc)FP Bit Twiddling.
* significandf: (libc)Normalization Functions.
* significand: (libc)Normalization Functions.
* significandl: (libc)Normalization Functions.
* sigpause: (libc)Blocking in BSD.
* sigpending: (libc)Checking for Pending Signals.
* SIGPIPE: (libc)Operation Error Signals.
* SIGPOLL: (libc)Asynchronous I/O Signals.
* sigprocmask: (libc)Process Signal Mask.
* SIGPROF: (libc)Alarm Signals.
* SIGQUIT: (libc)Termination Signals.
* SIGSEGV: (libc)Program Error Signals.
* sigsetjmp: (libc)Non-Local Exits and Signals.
* sigsetmask: (libc)Blocking in BSD.
* sigstack: (libc)Signal Stack.
* SIGSTOP: (libc)Job Control Signals.
* sigsuspend: (libc)Sigsuspend.
* SIGSYS: (libc)Program Error Signals.
* SIGTERM: (libc)Termination Signals.
* SIGTRAP: (libc)Program Error Signals.
* SIGTSTP: (libc)Job Control Signals.
* SIGTTIN: (libc)Job Control Signals.
* SIGTTOU: (libc)Job Control Signals.
* SIGURG: (libc)Asynchronous I/O Signals.
* SIGUSR1: (libc)Miscellaneous Signals.
* SIGUSR2: (libc)Miscellaneous Signals.
* sigvec: (libc)BSD Handler.
* SIGVTALRM: (libc)Alarm Signals.
* SIGWINCH: (libc)Miscellaneous Signals.
* SIGXCPU: (libc)Operation Error Signals.
* SIGXFSZ: (libc)Operation Error Signals.
* sincosf: (libc)Trig Functions.
* sincos: (libc)Trig Functions.
* sincosl: (libc)Trig Functions.
* sinf: (libc)Trig Functions.
* sinhf: (libc)Hyperbolic Functions.
* sinh: (libc)Hyperbolic Functions.
* sinhl: (libc)Hyperbolic Functions.
* sin: (libc)Trig Functions.
* sinl: (libc)Trig Functions.
* S_ISBLK: (libc)Testing File Type.
* S_ISCHR: (libc)Testing File Type.
* S_ISDIR: (libc)Testing File Type.
* S_ISFIFO: (libc)Testing File Type.
* S_ISLNK: (libc)Testing File Type.
* S_ISREG: (libc)Testing File Type.
* S_ISSOCK: (libc)Testing File Type.
* sleep: (libc)Sleeping.
* snprintf: (libc)Formatted Output Functions.
* SOCK_DGRAM: (libc)Communication Styles.
* socket: (libc)Creating a Socket.
* socketpair: (libc)Socket Pairs.
* SOCK_RAW: (libc)Communication Styles.
* SOCK_RDM: (libc)Communication Styles.
* SOCK_SEQPACKET: (libc)Communication Styles.
* SOCK_STREAM: (libc)Communication Styles.
* SOL_SOCKET: (libc)Socket-Level Options.
* sprintf: (libc)Formatted Output Functions.
* sqrtf: (libc)Exponents and Logarithms.
* sqrt: (libc)Exponents and Logarithms.
* sqrtl: (libc)Exponents and Logarithms.
* srand48: (libc)SVID Random.
* srand48_r: (libc)SVID Random.
* srand: (libc)ISO Random.
* srandom: (libc)BSD Random.
* srandom_r: (libc)BSD Random.
* sscanf: (libc)Formatted Input Functions.
* ssignal: (libc)Basic Signal Handling.
* SSIZE_MAX: (libc)General Limits.
* stat64: (libc)Reading Attributes.
* stat: (libc)Reading Attributes.
* stime: (libc)Simple Calendar Time.
* stpcpy: (libc)Copying and Concatenation.
* stpncpy: (libc)Copying and Concatenation.
* strcasecmp: (libc)String/Array Comparison.
* strcasestr: (libc)Search Functions.
* strcat: (libc)Copying and Concatenation.
* strchr: (libc)Search Functions.
* strchrnul: (libc)Search Functions.
* strcmp: (libc)String/Array Comparison.
* strcoll: (libc)Collation Functions.
* strcpy: (libc)Copying and Concatenation.
* strcspn: (libc)Search Functions.
* strdupa: (libc)Copying and Concatenation.
* strdup: (libc)Copying and Concatenation.
* STREAM_MAX: (libc)General Limits.
* strerror: (libc)Error Messages.
* strerror_r: (libc)Error Messages.
* strfmon: (libc)Formatting Numbers.
* strfry: (libc)strfry.
* strftime: (libc)Formatting Calendar Time.
* strlen: (libc)String Length.
* strncasecmp: (libc)String/Array Comparison.
* strncat: (libc)Copying and Concatenation.
* strncmp: (libc)String/Array Comparison.
* strncpy: (libc)Copying and Concatenation.
* strndupa: (libc)Copying and Concatenation.
* strndup: (libc)Copying and Concatenation.
* strnlen: (libc)String Length.
* strpbrk: (libc)Search Functions.
* strptime: (libc)Low-Level Time String Parsing.
* strrchr: (libc)Search Functions.
* strsep: (libc)Finding Tokens in a String.
* strsignal: (libc)Signal Messages.
* strspn: (libc)Search Functions.
* strstr: (libc)Search Functions.
* strtod: (libc)Parsing of Floats.
* strtof: (libc)Parsing of Floats.
* strtoimax: (libc)Parsing of Integers.
* strtok: (libc)Finding Tokens in a String.
* strtok_r: (libc)Finding Tokens in a String.
* strtold: (libc)Parsing of Floats.
* strtol: (libc)Parsing of Integers.
* strtoll: (libc)Parsing of Integers.
* strtoq: (libc)Parsing of Integers.
* strtoul: (libc)Parsing of Integers.
* strtoull: (libc)Parsing of Integers.
* strtoumax: (libc)Parsing of Integers.
* strtouq: (libc)Parsing of Integers.
* strverscmp: (libc)String/Array Comparison.
* strxfrm: (libc)Collation Functions.
* stty: (libc)BSD Terminal Modes.
* S_TYPEISMQ: (libc)Testing File Type.
* S_TYPEISSEM: (libc)Testing File Type.
* S_TYPEISSHM: (libc)Testing File Type.
* SUN_LEN: (libc)Local Namespace Details.
* SV_INTERRUPT: (libc)BSD Handler.
* SV_ONSTACK: (libc)BSD Handler.
* SV_RESETHAND: (libc)BSD Handler.
* swapcontext: (libc)System V contexts.
* swprintf: (libc)Formatted Output Functions.
* swscanf: (libc)Formatted Input Functions.
* symlink: (libc)Symbolic Links.
* sync: (libc)Synchronizing I/O.
* syscall: (libc)System Calls.
* sysconf: (libc)Sysconf Definition.
* sysctl: (libc)System Parameters.
* syslog: (libc)syslog; vsyslog.
* system: (libc)Running a Command.
* sysv_signal: (libc)Basic Signal Handling.
* tanf: (libc)Trig Functions.
* tanhf: (libc)Hyperbolic Functions.
* tanh: (libc)Hyperbolic Functions.
* tanhl: (libc)Hyperbolic Functions.
* tan: (libc)Trig Functions.
* tanl: (libc)Trig Functions.
* tcdrain: (libc)Line Control.
* tcflow: (libc)Line Control.
* tcflush: (libc)Line Control.
* tcgetattr: (libc)Mode Functions.
* tcgetpgrp: (libc)Terminal Access Functions.
* tcgetsid: (libc)Terminal Access Functions.
* tcsendbreak: (libc)Line Control.
* tcsetattr: (libc)Mode Functions.
* tcsetpgrp: (libc)Terminal Access Functions.
* tdelete: (libc)Tree Search Function.
* tdestroy: (libc)Tree Search Function.
* telldir: (libc)Random Access Directory.
* tempnam: (libc)Temporary Files.
* textdomain: (libc)Locating gettext catalog.
* tfind: (libc)Tree Search Function.
* tgammaf: (libc)Special Functions.
* tgamma: (libc)Special Functions.
* tgammal: (libc)Special Functions.
* timegm: (libc)Broken-down Time.
* time: (libc)Simple Calendar Time.
* timelocal: (libc)Broken-down Time.
* times: (libc)Processor Time.
* tmpfile64: (libc)Temporary Files.
* tmpfile: (libc)Temporary Files.
* TMP_MAX: (libc)Temporary Files.
* tmpnam: (libc)Temporary Files.
* tmpnam_r: (libc)Temporary Files.
* toascii: (libc)Case Conversion.
* _tolower: (libc)Case Conversion.
* tolower: (libc)Case Conversion.
* TOSTOP: (libc)Local Modes.
* _toupper: (libc)Case Conversion.
* toupper: (libc)Case Conversion.
* towctrans: (libc)Wide Character Case Conversion.
* towlower: (libc)Wide Character Case Conversion.
* towupper: (libc)Wide Character Case Conversion.
* truncate64: (libc)File Size.
* truncate: (libc)File Size.
* truncf: (libc)Rounding Functions.
* trunc: (libc)Rounding Functions.
* truncl: (libc)Rounding Functions.
* tsearch: (libc)Tree Search Function.
* ttyname: (libc)Is It a Terminal.
* ttyname_r: (libc)Is It a Terminal.
* twalk: (libc)Tree Search Function.
* TZNAME_MAX: (libc)General Limits.
* tzset: (libc)Time Zone Functions.
* ulimit: (libc)Limits on Resources.
* umask: (libc)Setting Permissions.
* umount2: (libc)Mount-Unmount-Remount.
* umount: (libc)Mount-Unmount-Remount.
* uname: (libc)Platform Type.
* ungetc: (libc)How Unread.
* ungetwc: (libc)How Unread.
* unlink: (libc)Deleting Files.
* unlockpt: (libc)Allocation.
* unsetenv: (libc)Environment Access.
* updwtmp: (libc)Manipulating the Database.
* utime: (libc)File Times.
* utimes: (libc)File Times.
* utmpname: (libc)Manipulating the Database.
* utmpxname: (libc)XPG Functions.
* va_arg: (libc)Argument Macros.
* __va_copy: (libc)Argument Macros.
* va_end: (libc)Argument Macros.
* valloc: (libc)Aligned Memory Blocks.
* vasprintf: (libc)Variable Arguments Output.
* va_start: (libc)Argument Macros.
* va_start: (libc)Old Varargs.
* VDISCARD: (libc)Other Special.
* VDSUSP: (libc)Signal Characters.
* VEOF: (libc)Editing Characters.
* VEOL2: (libc)Editing Characters.
* VEOL: (libc)Editing Characters.
* VERASE: (libc)Editing Characters.
* verr: (libc)Error Messages.
* verrx: (libc)Error Messages.
* versionsort64: (libc)Scanning Directory Content.
* versionsort: (libc)Scanning Directory Content.
* vfork: (libc)Creating a Process.
* vfprintf: (libc)Variable Arguments Output.
* vfscanf: (libc)Variable Arguments Input.
* vfwprintf: (libc)Variable Arguments Output.
* vfwscanf: (libc)Variable Arguments Input.
* VINTR: (libc)Signal Characters.
* VKILL: (libc)Editing Characters.
* vlimit: (libc)Limits on Resources.
* VLNEXT: (libc)Other Special.
* VMIN: (libc)Noncanonical Input.
* vprintf: (libc)Variable Arguments Output.
* VQUIT: (libc)Signal Characters.
* VREPRINT: (libc)Editing Characters.
* vscanf: (libc)Variable Arguments Input.
* vsnprintf: (libc)Variable Arguments Output.
* vsprintf: (libc)Variable Arguments Output.
* vsscanf: (libc)Variable Arguments Input.
* VSTART: (libc)Start/Stop Characters.
* VSTATUS: (libc)Other Special.
* VSTOP: (libc)Start/Stop Characters.
* VSUSP: (libc)Signal Characters.
* vswprintf: (libc)Variable Arguments Output.
* vswscanf: (libc)Variable Arguments Input.
* vsyslog: (libc)syslog; vsyslog.
* VTIME: (libc)Noncanonical Input.
* vtimes: (libc)Resource Usage.
* vwarn: (libc)Error Messages.
* vwarnx: (libc)Error Messages.
* VWERASE: (libc)Editing Characters.
* vwprintf: (libc)Variable Arguments Output.
* vwscanf: (libc)Variable Arguments Input.
* wait3: (libc)BSD Wait Functions.
* wait4: (libc)Process Completion.
* wait: (libc)Process Completion.
* waitpid: (libc)Process Completion.
* warn: (libc)Error Messages.
* warnx: (libc)Error Messages.
* WCHAR_MAX: (libc)Extended Char Intro.
* WCHAR_MIN: (libc)Extended Char Intro.
* WCOREDUMP: (libc)Process Completion Status.
* wcpcpy: (libc)Copying and Concatenation.
* wcpncpy: (libc)Copying and Concatenation.
* wcrtomb: (libc)Converting a Character.
* wcscasecmp: (libc)String/Array Comparison.
* wcscat: (libc)Copying and Concatenation.
* wcschr: (libc)Search Functions.
* wcschrnul: (libc)Search Functions.
* wcscmp: (libc)String/Array Comparison.
* wcscoll: (libc)Collation Functions.
* wcscpy: (libc)Copying and Concatenation.
* wcscspn: (libc)Search Functions.
* wcsdup: (libc)Copying and Concatenation.
* wcsftime: (libc)Formatting Calendar Time.
* wcslen: (libc)String Length.
* wcsncasecmp: (libc)String/Array Comparison.
* wcsncat: (libc)Copying and Concatenation.
* wcsncmp: (libc)String/Array Comparison.
* wcsncpy: (libc)Copying and Concatenation.
* wcsnlen: (libc)String Length.
* wcsnrtombs: (libc)Converting Strings.
* wcspbrk: (libc)Search Functions.
* wcsrchr: (libc)Search Functions.
* wcsrtombs: (libc)Converting Strings.
* wcsspn: (libc)Search Functions.
* wcsstr: (libc)Search Functions.
* wcstod: (libc)Parsing of Floats.
* wcstof: (libc)Parsing of Floats.
* wcstoimax: (libc)Parsing of Integers.
* wcstok: (libc)Finding Tokens in a String.
* wcstold: (libc)Parsing of Floats.
* wcstol: (libc)Parsing of Integers.
* wcstoll: (libc)Parsing of Integers.
* wcstombs: (libc)Non-reentrant String Conversion.
* wcstoq: (libc)Parsing of Integers.
* wcstoul: (libc)Parsing of Integers.
* wcstoull: (libc)Parsing of Integers.
* wcstoumax: (libc)Parsing of Integers.
* wcstouq: (libc)Parsing of Integers.
* wcswcs: (libc)Search Functions.
* wcsxfrm: (libc)Collation Functions.
* wctob: (libc)Converting a Character.
* wctomb: (libc)Non-reentrant Character Conversion.
* wctrans: (libc)Wide Character Case Conversion.
* wctype: (libc)Classification of Wide Characters.
* WEOF: (libc)EOF and Errors.
* WEOF: (libc)Extended Char Intro.
* WEXITSTATUS: (libc)Process Completion Status.
* WIFEXITED: (libc)Process Completion Status.
* WIFSIGNALED: (libc)Process Completion Status.
* WIFSTOPPED: (libc)Process Completion Status.
* wmemchr: (libc)Search Functions.
* wmemcmp: (libc)String/Array Comparison.
* wmemcpy: (libc)Copying and Concatenation.
* wmemmove: (libc)Copying and Concatenation.
* wmempcpy: (libc)Copying and Concatenation.
* wmemset: (libc)Copying and Concatenation.
* W_OK: (libc)Testing File Access.
* wordexp: (libc)Calling Wordexp.
* wordfree: (libc)Calling Wordexp.
* wprintf: (libc)Formatted Output Functions.
* write: (libc)I/O Primitives.
* writev: (libc)Scatter-Gather.
* wscanf: (libc)Formatted Input Functions.
* WSTOPSIG: (libc)Process Completion Status.
* WTERMSIG: (libc)Process Completion Status.
* X_OK: (libc)Testing File Access.
* y0f: (libc)Special Functions.
* y0: (libc)Special Functions.
* y0l: (libc)Special Functions.
* y1f: (libc)Special Functions.
* y1: (libc)Special Functions.
* y1l: (libc)Special Functions.
* ynf: (libc)Special Functions.
* yn: (libc)Special Functions.
* ynl: (libc)Special Functions.
END-INFO-DIR-ENTRY

   This file documents the GNU C library.

   This is Edition 0.10, last updated 2001-07-06, of `The GNU C Library
Reference Manual', for Version 2.3.x.

   Copyright (C) 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2001, 2002,
2003 Free Software Foundation, Inc.

   Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.1 or
any later version published by the Free Software Foundation; with the
Invariant Sections being "Free Software Needs Free Documentation" and
"GNU Lesser General Public License", the Front-Cover texts being (a)
(see below), and with the Back-Cover Texts being (b) (see below).  A
copy of the license is included in the section entitled "GNU Free
Documentation License".

   (a) The FSF's Front-Cover Text is:

   A GNU Manual

   (b) The FSF's Back-Cover Text is:

   You have freedom to copy and modify this GNU Manual, like GNU
software.  Copies published by the Free Software Foundation raise
funds for GNU development.


File: libc.info,  Node: Concept Index,  Next: Type Index,  Prev: Documentation License,  Up: Top

Concept Index
*************

* Menu:

* /etc/hostname:                         Host Identification.
* /etc/nsswitch.conf:                    NSS Configuration File.
* 4.N BSD Unix:                          Berkeley Unix.
* __va_copy:                             Copying and Concatenation.
* _POSIX_OPTION_ORDER environment variable.: Standard Environment.
* _POSIX_SAVED_IDS:                      How Change Persona.
* abort signal:                          Program Error Signals.
* aborting a program:                    Aborting a Program.
* absolute file name:                    File Name Resolution.
* absolute priority:                     Absolute Priority.
* absolute value functions:              Absolute Value.
* accepting connections:                 Accepting Connections.
* access permission for a file:          Access Permission.
* access, testing for:                   Testing File Access.
* accessing directories:                 Accessing Directories.
* address of socket:                     Socket Addresses.
* address space <1>:                     Program Basics.
* address space:                         Memory Subsystem.
* alarm signal:                          Alarm Signals.
* alarms, setting:                       Setting an Alarm.
* alignment (in obstacks):               Obstacks Data Alignment.
* alignment (with malloc):               Aligned Memory Blocks.
* alloca disadvantages:                  Disadvantages of Alloca.
* alloca function:                       Variable Size Automatic.
* allocating pseudo-terminals:           Allocation.
* allocation (obstacks):                 Allocation in an Obstack.
* allocation debugging:                  Allocation Debugging.
* allocation hooks, for malloc:          Hooks for Malloc.
* allocation of memory with malloc:      Basic Allocation.
* allocation size of string:             Representation of Strings.
* allocation statistics:                 Statistics of Malloc.
* alphabetic character <1>:              Classification of Wide Characters.
* alphabetic character:                  Classification of Characters.
* alphanumeric character <1>:            Classification of Wide Characters.
* alphanumeric character:                Classification of Characters.
* append-access files:                   File Position.
* argc (program argument count):         Program Arguments.
* argp (program argument parser):        Argp.
* argp parser functions:                 Argp Parser Functions.
* ARGP_HELP_FMT environment variable:    Argp User Customization.
* argument parsing with argp:            Argp.
* argument promotion:                    Calling Variadics.
* argument vectors, null-character separated: Argz and Envz Vectors.
* arguments (variadic functions):        Receiving Arguments.
* arguments, how many:                   How Many Arguments.
* arguments, to program:                 Program Arguments.
* argv (program argument vector):        Program Arguments.
* argz vectors (string vectors):         Argz and Envz Vectors.
* arithmetic expansion:                  Expansion Stages.
* array comparison functions:            String/Array Comparison.
* array copy functions:                  Copying and Concatenation.
* array search function:                 Array Search Function.
* array sort function:                   Array Sort Function.
* ASCII character:                       Classification of Characters.
* assertions:                            Consistency Checking.
* attributes of a file:                  Attribute Meanings.
* automatic freeing:                     Variable Size Automatic.
* automatic memory allocation:           Memory Allocation and C.
* automatic storage class:               Memory Allocation and C.
* automatic storage with variable size:  Variable Size Automatic.
* background job:                        Concepts of Job Control.
* background job, launching:             Foreground and Background.
* backtrace:                             Backtraces.
* backtrace_fd:                          Backtraces.
* backtrace_symbols:                     Backtraces.
* base (of floating point number):       Floating Point Concepts.
* baud rate:                             Line Speed.
* Berkeley Unix:                         Berkeley Unix.
* Bessel functions:                      Special Functions.
* bias (of floating point number exponent): Floating Point Concepts.
* big-endian:                            Byte Order.
* binary I/O to a stream:                Block Input/Output.
* binary search function (for arrays):   Array Search Function.
* binary stream:                         Binary Streams.
* binding a socket address:              Socket Addresses.
* blank character <1>:                   Classification of Wide Characters.
* blank character:                       Classification of Characters.
* block I/O to a stream:                 Block Input/Output.
* blocked signals:                       Delivery of Signal.
* blocked signals, checking for:         Checking for Pending Signals.
* blocking signals:                      Blocking Signals.
* blocking signals, in a handler:        Blocking for Handler.
* bootstrapping, and services:           Actions in the NSS configuration.
* break condition, detecting:            Input Modes.
* break condition, generating:           Line Control.
* breaking a string into tokens:         Finding Tokens in a String.
* broken pipe signal:                    Operation Error Signals.
* broken-down time <1>:                  Broken-down Time.
* broken-down time:                      Calendar Time.
* BSD compatibility library:             Process Group Functions.
* BSD compatibility library.:            Feature Test Macros.
* BSD Unix:                              Berkeley Unix.
* buffering of streams:                  Stream Buffering.
* buffering, controlling:                Controlling Buffering.
* bugs, reporting:                       Reporting Bugs.
* bus error:                             Program Error Signals.
* butterfly:                             Misc FP Arithmetic.
* byte order conversion, for socket:     Byte Order.
* byte stream:                           Socket Concepts.
* C++ streams:                           Streams and I18N.
* calendar time:                         Time Basics.
* calendar time and broken-down time:    Broken-down Time.
* calendar, Gregorian:                   Calendar Time.
* calling variadic functions:            Calling Variadics.
* canonical input processing:            Canonical or Not.
* capacity limits, POSIX:                General Limits.
* carrier detect:                        Control Modes.
* case conversion of characters:         Case Conversion.
* catching signals:                      Delivery of Signal.
* categories for locales:                Locale Categories.
* change working directory:              Working Directory.
* changing the locale:                   Setting the Locale.
* changing the size of a block (malloc): Changing Block Size.
* changing the size of a block (obstacks): Growing Objects.
* channels:                              Stream/Descriptor Precautions.
* character case conversion:             Case Conversion.
* character predicates:                  Classification of Characters.
* character testing:                     Classification of Characters.
* checking for pending signals:          Checking for Pending Signals.
* child process <1>:                     Process Creation Concepts.
* child process <2>:                     Processes.
* child process:                         Processor Time.
* child process signal:                  Job Control Signals.
* chunks:                                Obstack Chunks.
* classes, floating-point:               Floating Point Classes.
* classification of characters:          Classification of Characters.
* cleaning up a stream:                  Linked Channels.
* clearing terminal input queue:         Line Control.
* client:                                Connections.
* clock ticks:                           Processor And CPU Time.
* clock, high accuracy:                  High Accuracy Clock.
* close-on-exec (file descriptor flag):  Descriptor Flags.
* closing a file descriptor:             Opening and Closing Files.
* closing a socket:                      Closing a Socket.
* closing a stream:                      Closing Streams.
* collating strings:                     Collation Functions.
* combining locales:                     Choosing Locale.
* command argument syntax:               Argument Syntax.
* command arguments, parsing:            Parsing Program Arguments.
* command line arguments:                Program Arguments.
* command substitution:                  Expansion Stages.
* communication style (of a socket):     Socket Concepts.
* comparing strings and arrays:          String/Array Comparison.
* Comparison Function:                   Comparison Functions.
* compiling:                             Configuring and compiling.
* complex exponentiation functions:      Exponents and Logarithms.
* complex logarithm functions:           Exponents and Logarithms.
* complex numbers:                       Complex Numbers.
* complex trigonometric functions:       Trig Functions.
* concatenating strings:                 Copying and Concatenation.
* configurations, all supported:         Supported Configurations.
* configuring:                           Configuring and compiling.
* conjugate complex numbers:             Operations on Complex.
* connecting a socket:                   Connecting.
* connection:                            Connections.
* consistency checking:                  Consistency Checking.
* consistency checking, of heap:         Heap Consistency Checking.
* constants <1>:                         Mathematical Constants.
* constants:                             Memory Concepts.
* continue signal:                       Job Control Signals.
* control character <1>:                 Classification of Wide Characters.
* control character:                     Classification of Characters.
* control operations on files:           Control Operations.
* controlling process:                   Controlling Terminal.
* controlling terminal:                  Concepts of Job Control.
* controlling terminal, access to:       Access to the Terminal.
* controlling terminal, determining:     Identifying the Terminal.
* controlling terminal, setting:         Open-time Flags.
* conversion specifications (printf):    Formatted Output Basics.
* conversion specifications (scanf):     Formatted Input Basics.
* converting byte order:                 Byte Order.
* converting case of characters:         Case Conversion.
* converting file descriptor to stream:  Descriptors and Streams.
* converting floats to integers:         Rounding Functions.
* converting group ID to group name:     Lookup Group.
* converting group name to group ID:     Lookup Group.
* converting host address to name:       Host Names.
* converting host name to address:       Host Names.
* converting network name to network number: Networks Database.
* converting network number to network name: Networks Database.
* converting port number to service name: Services Database.
* converting service name to port number: Services Database.
* converting string to collation order:  Collation Functions.
* converting strings to numbers:         Parsing of Numbers.
* converting user ID to user name:       Lookup User.
* converting user name to user ID:       Lookup User.
* cookie, for custom stream:             Streams and Cookies.
* copy-on-write page fault:              Locked Memory Details.
* copying strings and arrays:            Copying and Concatenation.
* cpu priority:                          Priority.
* CPU time <1>:                          Processor Time.
* CPU time <2>:                          Processor And CPU Time.
* CPU time:                              Time Basics.
* create on open (file status flag):     Open-time Flags.
* creating a directory:                  Creating Directories.
* creating a FIFO special file:          FIFO Special Files.
* creating a pipe:                       Creating a Pipe.
* creating a pipe to a subprocess:       Pipe to a Subprocess.
* creating a process:                    Process Creation Concepts.
* creating a socket:                     Creating a Socket.
* creating a socket pair:                Socket Pairs.
* creating special files:                Making Special Files.
* cube root function:                    Exponents and Logarithms.
* currency symbols:                      Currency Symbol.
* current limit:                         Limits on Resources.
* current working directory:             Working Directory.
* custom streams:                        Custom Streams.
* customizing printf:                    Customizing Printf.
* data loss on sockets:                  Socket Concepts.
* databases:                             Name Service Switch.
* datagram socket:                       Datagrams.
* datagrams, transmitting:               Sending Datagrams.
* date:                                  Time Basics.
* Daylight Saving Time:                  Broken-down Time.
* decimal digit character:               Classification of Characters.
* decimal-point separator:               General Numeric.
* declaration (compared to definition):  Header Files.
* declaring variadic functions:          Calling Variadics.
* decompose complex numbers:             Operations on Complex.
* default action (for a signal):         Delivery of Signal.
* default action for a signal:           Basic Signal Handling.
* default argument promotions:           Calling Variadics.
* default value, and NSS:                Notes on NSS Configuration File.
* defining new printf conversions:       Customizing Printf.
* definition (compared to declaration):  Header Files.
* delayed suspend character:             Signal Characters.
* deleting a directory:                  Deleting Files.
* deleting a file:                       Deleting Files.
* delivery of signals:                   Delivery of Signal.
* descriptors and streams:               Stream/Descriptor Precautions.
* digit character <1>:                   Classification of Wide Characters.
* digit character:                       Classification of Characters.
* directories, accessing:                Accessing Directories.
* directories, creating:                 Creating Directories.
* directories, deleting:                 Deleting Files.
* directory:                             Directories.
* directory entry:                       Directories.
* directory hierarchy:                   Working with Directory Trees.
* directory stream:                      Accessing Directories.
* disadvantages of alloca:               Disadvantages of Alloca.
* DISCARD character:                     Other Special.
* division by zero:                      FP Exceptions.
* DNS:                                   Host Identification.
* DNS server unavailable:                Actions in the NSS configuration.
* domain (of socket):                    Socket Concepts.
* domain error:                          Math Error Reporting.
* domain name:                           Host Identification.
* Domain Name System:                    Host Identification.
* dot notation, for Internet addresses:  Abstract Host Addresses.
* DSUSP character:                       Signal Characters.
* duplicating file descriptors:          Duplicating Descriptors.
* dynamic memory allocation:             Memory Allocation and C.
* EBCDIC:                                Extended Char Intro.
* echo of terminal input:                Local Modes.
* effective group ID:                    Process Persona.
* effective user ID:                     Process Persona.
* efficiency and malloc:                 Efficiency and Malloc.
* efficiency and obstacks:               Extra Fast Growing.
* efficiency of chunks:                  Obstack Chunks.
* EINTR, and restarting interrupted primitives: Interrupted Primitives.
* elapsed time <1>:                      Elapsed Time.
* elapsed time:                          Time Basics.
* encryption:                            Trivial Encryption.
* end of file, on a stream:              EOF and Errors.
* end-of-file, on a file descriptor:     I/O Primitives.
* environment:                           Environment Variables.
* environment access:                    Environment Access.
* environment representation:            Environment Access.
* environment variable:                  Environment Variables.
* environment vectors, null-character separated: Argz and Envz Vectors.
* envz vectors (environment vectors):    Argz and Envz Vectors.
* EOF character:                         Editing Characters.
* EOL character:                         Editing Characters.
* EOL2 character:                        Editing Characters.
* epoch:                                 Simple Calendar Time.
* ERASE character:                       Editing Characters.
* errno:                                 System Calls.
* error codes:                           Error Reporting.
* error messages, in argp:               Argp Helper Functions.
* error reporting:                       Error Reporting.
* errors, mathematical:                  Math Error Reporting.
* establishing a handler:                Signal Actions.
* ethers:                                NSS Basics.
* EUC:                                   Extended Char Intro.
* EUC-JP:                                glibc iconv Implementation.
* exception <1>:                         Program Error Signals.
* exception:                             FP Exceptions.
* exclusive lock:                        File Locks.
* exec functions:                        Executing a File.
* execing a program:                     Memory Concepts.
* executable:                            Memory Concepts.
* executing a file:                      Executing a File.
* exit status:                           Exit Status.
* exit status value:                     Program Termination.
* exiting a program:                     Memory Concepts.
* expansion of shell words:              Word Expansion.
* exponent (of floating point number):   Floating Point Concepts.
* exponentiation functions:              Exponents and Logarithms.
* extending printf:                      Customizing Printf.
* extracting file descriptor from stream: Descriptors and Streams.
* fcntl function:                        Control Operations.
* FDL, GNU Free Documentation License:   Documentation License.
* feature test macros:                   Feature Test Macros.
* field splitting:                       Expansion Stages.
* FIFO special file:                     Pipes and FIFOs.
* file access permission:                Access Permission.
* file access time:                      File Times.
* file attribute modification time:      File Times.
* file attributes:                       Attribute Meanings.
* file creation mask:                    Setting Permissions.
* file descriptor flags:                 Descriptor Flags.
* file descriptor sets, for select:      Waiting for I/O.
* file descriptors, standard:            Descriptors and Streams.
* file locks:                            File Locks.
* file modification time:                File Times.
* file name:                             File Names.
* file name component:                   Directories.
* file name errors:                      File Name Errors.
* file name resolution:                  File Name Resolution.
* file name translation flags:           Open-time Flags.
* file names, multiple:                  Hard Links.
* file owner:                            File Owner.
* file permission bits:                  Permission Bits.
* file pointer:                          Streams.
* file position:                         File Position.
* file positioning on a file descriptor: File Position Primitive.
* file positioning on a stream:          File Positioning.
* file status flags:                     File Status Flags.
* files, accessing:                      Memory Concepts.
* filtering i/o through subprocess:      Pipe to a Subprocess.
* flag character (printf):               Output Conversion Syntax.
* flag character (scanf):                Input Conversion Syntax.
* flags for sigaction:                   Flags for Sigaction.
* flags, file name translation:          Open-time Flags.
* flags, open-time action:               Open-time Flags.
* floating point:                        Floating Point Numbers.
* floating point, IEEE:                  IEEE Floating Point.
* floating type measurements:            Floating Type Macros.
* floating-point classes:                Floating Point Classes.
* floating-point exception:              Program Error Signals.
* flow control, terminal:                Line Control.
* flushing a stream:                     Flushing Buffers.
* flushing terminal output queue:        Line Control.
* foreground job:                        Concepts of Job Control.
* foreground job, launching:             Foreground and Background.
* forking a process:                     Process Creation Concepts.
* format string, for printf:             Formatted Output.
* format string, for scanf:              Formatted Input.
* formatted input from a stream:         Formatted Input.
* formatted messages:                    Formatted Messages.
* formatted output to a stream:          Formatted Output.
* FP arithmetic:                         FP Bit Twiddling.
* FQDN:                                  Host Identification.
* frame, real memory:                    Memory Concepts.
* free documentation:                    Free Manuals.
* freeing (obstacks):                    Freeing Obstack Objects.
* freeing memory:                        Memory Concepts.
* freeing memory allocated with malloc:  Freeing after Malloc.
* fully buffered stream:                 Buffering Concepts.
* function prototypes (variadic):        Variadic Prototypes.
* gamma function:                        Special Functions.
* gcvt_r:                                System V Number Conversion.
* gencat:                                The gencat program.
* generation of signals:                 Signal Generation.
* generic i/o control operations:        IOCTLs.
* globbing:                              Globbing.
* graphic character <1>:                 Classification of Wide Characters.
* graphic character:                     Classification of Characters.
* Gregorian calendar:                    Calendar Time.
* group:                                 NSS Basics.
* group database:                        Group Database.
* group ID:                              User and Group IDs.
* group name:                            User and Group IDs.
* group owner of a file:                 File Owner.
* grouping of digits:                    General Numeric.
* growing objects (in obstacks):         Growing Objects.
* handling multiple signals:             Merged Signals.
* hangup signal:                         Termination Signals.
* hard limit:                            Limits on Resources.
* hard link:                             Hard Links.
* header files:                          Header Files.
* heap consistency checking:             Heap Consistency Checking.
* heap, dynamic allocation from:         Unconstrained Allocation.
* heap, freeing memory from:             Freeing after Malloc.
* hexadecimal digit character <1>:       Classification of Wide Characters.
* hexadecimal digit character:           Classification of Characters.
* hidden bit (of floating point number mantissa): Floating Point Concepts.
* hierarchy, directory:                  Working with Directory Trees.
* high-priority data:                    Out-of-Band Data.
* high-resolution time:                  Calendar Time.
* holes in files:                        File Position Primitive.
* home directory:                        Standard Environment.
* HOME environment variable:             Standard Environment.
* hook functions (of custom streams):    Hook Functions.
* host address, Internet:                Abstract Host Addresses.
* host name:                             Host Identification.
* hostname:                              Host Identification.
* hosts:                                 NSS Basics.
* hosts database:                        Host Names.
* how many arguments:                    How Many Arguments.
* hyperbolic functions:                  Hyperbolic Functions.
* identifying terminals:                 Is It a Terminal.
* IEEE 754:                              Floating Point Numbers.
* IEEE floating point:                   Floating Point Numbers.
* IEEE floating point representation:    IEEE Floating Point.
* IEEE Std 1003.1:                       POSIX.
* IEEE Std 1003.2:                       POSIX.
* ignore action for a signal:            Basic Signal Handling.
* illegal instruction:                   Program Error Signals.
* impossible events:                     Consistency Checking.
* independent channels:                  Independent Channels.
* inexact exception:                     FP Exceptions.
* infinity:                              Infinity and NaN.
* initial signal actions:                Initial Signal Actions.
* inode number:                          Attribute Meanings.
* input available signal:                Asynchronous I/O Signals.
* input conversions, for scanf:          Table of Input Conversions.
* input from multiple files:             Waiting for I/O.
* installation tools:                    Tools for Compilation.
* installing:                            Running make install.
* integer:                               Integers.
* integer division functions:            Integer Division.
* integer type range:                    Range of Type.
* integer type width:                    Width of Type.
* interactive signals, from terminal:    Local Modes.
* interactive stop signal:               Job Control Signals.
* internal representation:               Extended Char Intro.
* internationalization:                  Locales.
* Internet host address:                 Abstract Host Addresses.
* Internet namespace, for sockets:       Internet Namespace.
* interprocess communication, with FIFO: FIFO Special Files.
* interprocess communication, with pipes: Creating a Pipe.
* interprocess communication, with signals: Kill Example.
* interprocess communication, with sockets: Sockets.
* interrupt character:                   Signal Characters.
* interrupt signal:                      Termination Signals.
* interrupt-driven input:                Interrupt Input.
* interrupting primitives:               Interrupted Primitives.
* interval:                              Time Basics.
* interval timer, setting:               Setting an Alarm.
* INTR character:                        Signal Characters.
* invalid exception:                     FP Exceptions.
* inverse complex hyperbolic functions:  Hyperbolic Functions.
* inverse complex trigonometric functions: Inverse Trig Functions.
* inverse hyperbolic functions:          Hyperbolic Functions.
* inverse trigonometric functions:       Inverse Trig Functions.
* invocation of program:                 Program Arguments.
* IOCTLs:                                IOCTLs.
* ISO 10646:                             Extended Char Intro.
* ISO 2022:                              Extended Char Intro.
* ISO 6937:                              Extended Char Intro.
* ISO C:                                 ISO C.
* ISO-2022-JP:                           glibc iconv Implementation.
* ISO/IEC 9945-1:                        POSIX.
* ISO/IEC 9945-2:                        POSIX.
* job:                                   Job Control.
* job control:                           Job Control.
* job control functions:                 Functions for Job Control.
* job control is optional:               Job Control is Optional.
* job control signals:                   Job Control Signals.
* job control, enabling:                 Initializing the Shell.
* Kermit the frog:                       Search/Sort Example.
* kernel call:                           System Calls.
* kernel header files:                   Linux.
* KILL character:                        Editing Characters.
* kill signal:                           Termination Signals.
* killing a process:                     Signaling Another Process.
* Korn Shell:                            Wildcard Matching.
* LANG environment variable <1>:         Standard Environment.
* LANG environment variable:             The catgets Functions.
* launching jobs:                        Launching Jobs.
* LC_ALL environment variable <1>:       Standard Environment.
* LC_ALL environment variable:           The catgets Functions.
* LC_COLLATE environment variable:       Standard Environment.
* LC_CTYPE environment variable:         Standard Environment.
* LC_MESSAGES environment variable <1>:  Standard Environment.
* LC_MESSAGES environment variable:      The catgets Functions.
* LC_MONETARY environment variable:      Standard Environment.
* LC_NUMERIC environment variable:       Standard Environment.
* LC_TIME environment variable:          Standard Environment.
* leap second:                           Broken-down Time.
* length of string:                      Representation of Strings.
* level, for socket options:             Socket Options.
* LGPL, Lesser General Public License:   Copying.
* library:                               Introduction.
* limit:                                 Limits on Resources.
* limits on resource usage:              Limits on Resources.
* limits, file name length:              Limits for Files.
* limits, floating types:                Floating Type Macros.
* limits, integer types:                 Range of Type.
* limits, link count of files:           Limits for Files.
* limits, number of open files:          General Limits.
* limits, number of processes:           General Limits.
* limits, number of supplementary group IDs: General Limits.
* limits, pipe buffer size:              Limits for Files.
* limits, POSIX:                         General Limits.
* limits, program argument size:         General Limits.
* limits, terminal input queue:          Limits for Files.
* limits, time zone name length:         General Limits.
* line buffered stream:                  Buffering Concepts.
* line speed:                            Line Speed.
* lines (in a text file):                Binary Streams.
* link:                                  Directories.
* link, hard:                            Hard Links.
* link, soft:                            Symbolic Links.
* link, symbolic:                        Symbolic Links.
* linked channels:                       Linked Channels.
* listening (sockets):                   Listening.
* literals:                              Memory Concepts.
* little-endian:                         Byte Order.
* LNEXT character:                       Other Special.
* load average:                          Processor Resources.
* local namespace, for sockets:          Local Namespace.
* local network address number:          Abstract Host Addresses.
* local time:                            Calendar Time.
* locale categories:                     Locale Categories.
* locale, changing:                      Setting the Locale.
* locales:                               Locales.
* locking pages:                         Locking Pages.
* logarithm functions:                   Exponents and Logarithms.
* login name:                            User and Group IDs.
* login name, determining:               Who Logged In.
* LOGNAME environment variable:          Standard Environment.
* long jumps:                            Non-Local Exits.
* long-named options:                    Argument Syntax.
* longjmp:                               Advantages of Alloca.
* loss of data on sockets:               Socket Concepts.
* lost resource signal:                  Operation Error Signals.
* lower-case character <1>:              Classification of Wide Characters.
* lower-case character:                  Classification of Characters.
* macros:                                Obstack Functions.
* main function:                         Program Arguments.
* malloc debugger:                       Allocation Debugging.
* malloc function:                       Unconstrained Allocation.
* mantissa (of floating point number):   Floating Point Concepts.
* matching failure, in scanf:            Formatted Input Basics.
* math errors:                           Errors in Math Functions.
* mathematical constants:                Mathematical Constants.
* maximum:                               Misc FP Arithmetic.
* maximum field width (scanf):           Input Conversion Syntax.
* maximum limit:                         Limits on Resources.
* maximum possible integer:              Integers.
* measurements of floating types:        Floating Type Macros.
* memory allocation:                     Memory.
* memory lock:                           Locking Pages.
* memory mapped file:                    Memory Concepts.
* memory mapped I/O:                     Memory Concepts.
* memory page:                           Memory Subsystem.
* merging of signals:                    Merged Signals.
* MIN termios slot:                      Noncanonical Input.
* minimum:                               Misc FP Arithmetic.
* minimum field width (printf):          Output Conversion Syntax.
* minimum possible integer:              Integers.
* mixing descriptors and streams:        Stream/Descriptor Precautions.
* modem disconnect:                      Control Modes.
* modem status lines:                    Control Modes.
* monetary value formatting:             The Lame Way to Locale Data.
* multi-threaded application:            Streams and Threads.
* multibyte character:                   Extended Char Intro.
* multibyte character string:            Representation of Strings.
* multibyte string:                      Representation of Strings.
* multiple names for one file:           Hard Links.
* multiplexing input:                    Waiting for I/O.
* multiply-add:                          Misc FP Arithmetic.
* name of running program:               Error Messages.
* name of socket:                        Socket Addresses.
* Name Service Switch:                   Name Service Switch.
* name space:                            Reserved Names.
* names of signals:                      Standard Signals.
* namespace (of socket):                 Socket Concepts.
* NaN <1>:                               FP Bit Twiddling.
* NaN:                                   Infinity and NaN.
* Netgroup:                              Netgroup Data.
* netgroup:                              NSS Basics.
* network byte order:                    Byte Order.
* network number:                        Abstract Host Addresses.
* network protocol:                      Socket Concepts.
* networks:                              NSS Basics.
* networks database:                     Networks Database.
* NIS:                                   Host Identification.
* NIS domain name:                       Host Identification.
* nisplus, and booting:                  Actions in the NSS configuration.
* nisplus, and completeness:             Actions in the NSS configuration.
* NLSPATH environment variable <1>:      Standard Environment.
* NLSPATH environment variable:          The catgets Functions.
* non-blocking open:                     Open-time Flags.
* non-local exit, from signal handler:   Longjmp in Handler.
* non-local exits:                       Non-Local Exits.
* noncanonical input processing:         Canonical or Not.
* normalization functions (floating-point): Normalization Functions.
* normalized floating point number:      Floating Point Concepts.
* not a number:                          Infinity and NaN.
* NSS:                                   Name Service Switch.
* nsswitch.conf:                         NSS Configuration File.
* null character:                        Representation of Strings.
* null pointer constant:                 Null Pointer Constant.
* null wide character:                   Representation of Strings.
* number of arguments passed:            How Many Arguments.
* number syntax, parsing:                Parsing of Numbers.
* numeric value formatting:              The Lame Way to Locale Data.
* obstack status:                        Status of an Obstack.
* obstacks:                              Obstacks.
* open-time action flags:                Open-time Flags.
* opening a file:                        I/O Concepts.
* opening a file descriptor:             Opening and Closing Files.
* opening a pipe:                        Creating a Pipe.
* opening a pseudo-terminal pair:        Pseudo-Terminal Pairs.
* opening a socket:                      Creating a Socket.
* opening a socket pair:                 Socket Pairs.
* opening a stream:                      Opening Streams.
* Optimization:                          FP Function Optimizations.
* optimizing NSS:                        Notes on NSS Configuration File.
* option parsing with argp:              Argp.
* optional arguments:                    Variadic Functions.
* optional POSIX features:               System Options.
* orientation, stream <1>:               Streams and I18N.
* orientation, stream:                   Opening Streams.
* orphaned process group:                Orphaned Process Groups.
* out-of-band data:                      Out-of-Band Data.
* output conversions, for printf:        Table of Output Conversions.
* output possible signal:                Asynchronous I/O Signals.
* overflow exception:                    FP Exceptions.
* owner of a file:                       File Owner.
* packet:                                Socket Concepts.
* page boundary:                         Aligned Memory Blocks.
* page fault:                            Memory Concepts.
* page fault, copy-on-write:             Locked Memory Details.
* page frame:                            Memory Concepts.
* page, memory:                          Memory Subsystem.
* page, virtual memory:                  Memory Concepts.
* paging <1>:                            Locking Pages.
* paging:                                Memory Concepts.
* parameter promotion:                   String/Array Conventions.
* parent directory:                      File Name Resolution.
* parent process <1>:                    Process Creation Concepts.
* parent process:                        Processes.
* parity checking:                       Input Modes.
* parsing a template string:             Parsing a Template String.
* parsing numbers (in formatted input):  Parsing of Numbers.
* parsing program arguments:             Parsing Program Arguments.
* parsing tokens from a string:          Finding Tokens in a String.
* passwd:                                NSS Basics.
* password database:                     User Database.
* PATH environment variable:             Standard Environment.
* pause function:                        Waiting for a Signal.
* peeking at input:                      Unreading.
* pending signals:                       Delivery of Signal.
* pending signals, checking for:         Checking for Pending Signals.
* period of time:                        Time Basics.
* permission to access a file:           Access Permission.
* persona:                               Process Persona.
* physical address:                      Memory Subsystem.
* physical memory:                       Memory Subsystem.
* pi (trigonometric constant):           Trig Functions.
* pipe:                                  Pipes and FIFOs.
* pipe signal:                           Operation Error Signals.
* pipe to a subprocess:                  Pipe to a Subprocess.
* port number:                           Ports.
* positioning a file descriptor:         File Position Primitive.
* positioning a stream:                  File Positioning.
* positive difference:                   Misc FP Arithmetic.
* POSIX:                                 POSIX.
* POSIX capacity limits:                 General Limits.
* POSIX optional features:               System Options.
* POSIX.1:                               POSIX.
* POSIX.2:                               POSIX.
* power functions:                       Exponents and Logarithms.
* precision (of floating point number):  Floating Point Concepts.
* precision (printf):                    Output Conversion Syntax.
* predicates on arrays:                  String/Array Comparison.
* predicates on characters:              Classification of Characters.
* predicates on strings:                 String/Array Comparison.
* preemptive scheduling:                 Absolute Priority.
* primitives, interrupting:              Interrupted Primitives.
* printing character <1>:                Classification of Wide Characters.
* printing character:                    Classification of Characters.
* priority of a process:                 Priority.
* priority, absolute:                    Absolute Priority.
* process <1>:                           Processes.
* process:                               Program Basics.
* process completion:                    Process Completion.
* process group functions:               Functions for Job Control.
* process group ID:                      Launching Jobs.
* process group leader:                  Launching Jobs.
* process groups:                        Job Control.
* process ID:                            Process Creation Concepts.
* process image:                         Process Creation Concepts.
* process lifetime:                      Process Creation Concepts.
* process priority:                      Priority.
* process signal mask:                   Process Signal Mask.
* process termination:                   Program Termination.
* processor time <1>:                    Processor Time.
* processor time:                        Time Basics.
* profiling alarm signal:                Alarm Signals.
* profiling timer:                       Setting an Alarm.
* program:                               Program Basics.
* program argument syntax:               Argument Syntax.
* program arguments:                     Program Arguments.
* program arguments, parsing:            Parsing Program Arguments.
* program error signals:                 Program Error Signals.
* program name:                          Error Messages.
* program startup:                       Program Arguments.
* program termination:                   Program Termination.
* program termination signals:           Termination Signals.
* programming your own streams:          Custom Streams.
* project complex numbers:               Operations on Complex.
* protocol (of socket):                  Socket Concepts.
* protocol family:                       Socket Concepts.
* protocols:                             NSS Basics.
* protocols database:                    Protocols Database.
* prototypes for variadic functions:     Variadic Prototypes.
* pseudo-random numbers:                 Pseudo-Random Numbers.
* pseudo-terminals:                      Pseudo-Terminals.
* punctuation character <1>:             Classification of Wide Characters.
* punctuation character:                 Classification of Characters.
* pushing input back:                    Unreading.
* quick sort function (for arrays):      Array Sort Function.
* QUIT character:                        Signal Characters.
* quit signal:                           Termination Signals.
* quote removal:                         Expansion Stages.
* race conditions, relating to job control: Launching Jobs.
* race conditions, relating to signals:  Signals in Handler.
* radix (of floating point number):      Floating Point Concepts.
* raising signals:                       Generating Signals.
* random numbers:                        Pseudo-Random Numbers.
* random-access files:                   File Position.
* range error:                           Math Error Reporting.
* range of integer type:                 Range of Type.
* read lock:                             File Locks.
* reading from a directory:              Accessing Directories.
* reading from a file descriptor:        I/O Primitives.
* reading from a socket:                 Transferring Data.
* reading from a stream, by blocks:      Block Input/Output.
* reading from a stream, by characters:  Character Input.
* reading from a stream, formatted:      Formatted Input.
* ready to run:                          Absolute Priority.
* real group ID:                         Process Persona.
* real user ID:                          Process Persona.
* real-time timer:                       Setting an Alarm.
* realtime CPU scheduling:               Absolute Priority.
* realtime processing:                   Why Lock Pages.
* realtime scheduling:                   Realtime Scheduling.
* receiving datagrams:                   Receiving Datagrams.
* record locking:                        File Locks.
* redirecting input and output:          Duplicating Descriptors.
* reentrant functions:                   Nonreentrancy.
* reentrant NSS functions:               NSS Module Names.
* relative file name:                    File Name Resolution.
* removal of quotes:                     Expansion Stages.
* removing a file:                       Deleting Files.
* removing macros that shadow functions: Macro Definitions.
* renaming a file:                       Renaming Files.
* reporting bugs:                        Reporting Bugs.
* reporting errors:                      Error Reporting.
* REPRINT character:                     Editing Characters.
* reserved names:                        Reserved Names.
* resource limits:                       Limits on Resources.
* restarting interrupted primitives:     Interrupted Primitives.
* restrictions on signal handler functions: Nonreentrancy.
* root directory:                        File Name Resolution.
* Rot13:                                 Trivial Encryption.
* rpc:                                   NSS Basics.
* runnable process:                      Absolute Priority.
* running a command:                     Running a Command.
* saved set-group-ID:                    How Change Persona.
* saved set-user-ID:                     How Change Persona.
* scanning the group list:               Scanning All Groups.
* scanning the user list:                Scanning All Users.
* scatter-gather:                        Scatter-Gather.
* scheduling, traditional:               Traditional Scheduling.
* search function (for arrays):          Array Search Function.
* search functions (for strings):        Search Functions.
* seed (for random numbers):             Pseudo-Random Numbers.
* seeking on a file descriptor:          File Position Primitive.
* seeking on a stream:                   File Positioning.
* segmentation violation:                Program Error Signals.
* sending a datagram:                    Sending Datagrams.
* sending signals:                       Generating Signals.
* sequential-access files:               File Position.
* server:                                Connections.
* services:                              NSS Basics.
* services database:                     Services Database.
* session <1>:                           Concepts of Job Control.
* session:                               Job Control.
* session leader:                        Concepts of Job Control.
* setting an alarm:                      Setting an Alarm.
* setuid programs:                       How Change Persona.
* setuid programs and file access:       Testing File Access.
* severity class <1>:                    Adding Severity Classes.
* severity class:                        Printing Formatted Messages.
* sgettext:                              GUI program problems.
* shadow:                                NSS Basics.
* shadowing functions with macros:       Macro Definitions.
* shared lock:                           File Locks.
* shared memory:                         Memory Subsystem.
* shell:                                 Concepts of Job Control.
* shift state:                           Keeping the state.
* Shift_JIS:                             Extended Char Intro.
* shrinking objects:                     Growing Objects.
* shutting down a socket:                Closing a Socket.
* sigaction flags:                       Flags for Sigaction.
* sigaction function:                    Advanced Signal Handling.
* SIGCHLD, handling of:                  Stopped and Terminated Jobs.
* sign (of floating point number):       Floating Point Concepts.
* signal <1>:                            Signal Handling.
* signal:                                FP Exceptions.
* signal action:                         Delivery of Signal.
* signal actions:                        Signal Actions.
* signal flags:                          Flags for Sigaction.
* signal function:                       Basic Signal Handling.
* signal handler function:               Defining Handlers.
* signal mask:                           Process Signal Mask.
* signal messages:                       Signal Messages.
* signal names:                          Standard Signals.
* signal number:                         Standard Signals.
* signal set:                            Signal Sets.
* signals, generating:                   Generating Signals.
* signedness:                            Integers.
* significand (of floating point number): Floating Point Concepts.
* SIGTTIN, from background job:          Access to the Terminal.
* SIGTTOU, from background job:          Access to the Terminal.
* simple time:                           Calendar Time.
* single-byte string:                    Representation of Strings.
* size of string:                        Representation of Strings.
* SJIS:                                  Extended Char Intro.
* socket:                                Sockets.
* socket address (name) binding:         Socket Addresses.
* socket domain:                         Socket Concepts.
* socket namespace:                      Socket Concepts.
* socket option level:                   Socket Options.
* socket options:                        Socket Options.
* socket pair:                           Socket Pairs.
* socket protocol:                       Socket Concepts.
* socket shutdown:                       Closing a Socket.
* socket, client actions:                Connecting.
* socket, closing:                       Closing a Socket.
* socket, connecting:                    Connecting.
* socket, creating:                      Creating a Socket.
* socket, initiating a connection:       Connecting.
* sockets, accepting connections:        Accepting Connections.
* sockets, listening:                    Listening.
* sockets, server actions:               Listening.
* soft limit:                            Limits on Resources.
* soft link:                             Symbolic Links.
* sort function (for arrays):            Array Sort Function.
* sparse files:                          File Position Primitive.
* special files:                         Making Special Files.
* special functions:                     Special Functions.
* specified action (for a signal):       Delivery of Signal.
* speed of execution:                    Why Lock Pages.
* square root function:                  Exponents and Logarithms.
* stable sorting:                        Array Sort Function.
* standard dot notation, for Internet addresses: Abstract Host Addresses.
* standard environment variables:        Standard Environment.
* standard error file descriptor:        Descriptors and Streams.
* standard error stream:                 Standard Streams.
* standard file descriptors:             Descriptors and Streams.
* standard input file descriptor:        Descriptors and Streams.
* standard input stream:                 Standard Streams.
* standard output file descriptor:       Descriptors and Streams.
* standard output stream:                Standard Streams.
* standard streams:                      Standard Streams.
* standards:                             Standards and Portability.
* START character:                       Start/Stop Characters.
* startup of program:                    Program Arguments.
* stateful <1>:                          glibc iconv Implementation.
* stateful <2>:                          iconv Examples.
* stateful <3>:                          Generic Conversion Interface.
* stateful <4>:                          Converting Strings.
* stateful <5>:                          Converting a Character.
* stateful:                              Keeping the state.
* static memory allocation:              Memory Allocation and C.
* static storage class:                  Memory Allocation and C.
* STATUS character:                      Other Special.
* status codes:                          Error Reporting.
* status of a file:                      Attribute Meanings.
* status of obstack:                     Status of an Obstack.
* sticky bit:                            Permission Bits.
* STOP character:                        Start/Stop Characters.
* stop signal:                           Job Control Signals.
* stopped job:                           Concepts of Job Control.
* stopped jobs, continuing:              Continuing Stopped Jobs.
* stopped jobs, detecting:               Stopped and Terminated Jobs.
* storage allocation:                    Memory.
* stream (sockets):                      Socket Concepts.
* stream orientation <1>:                Streams and I18N.
* stream orientation:                    Opening Streams.
* stream, for I/O to a string:           String Streams.
* streams and descriptors:               Stream/Descriptor Precautions.
* streams, and file descriptors:         Descriptors and Streams.
* streams, C++:                          Streams and I18N.
* streams, standard:                     Standard Streams.
* string:                                Representation of Strings.
* string allocation:                     Representation of Strings.
* string collation functions:            Collation Functions.
* string comparison functions:           String/Array Comparison.
* string concatenation functions:        Copying and Concatenation.
* string copy functions:                 Copying and Concatenation.
* string length:                         Representation of Strings.
* string literal:                        Representation of Strings.
* string search functions:               Search Functions.
* string stream:                         String Streams.
* string vectors, null-character separated: Argz and Envz Vectors.
* string, representation of:             Representation of Strings.
* style of communication (of a socket):  Socket Concepts.
* subshell:                              Initializing the Shell.
* substitution of variables and commands: Expansion Stages.
* successive signals:                    Merged Signals.
* summer time:                           Broken-down Time.
* SunOS:                                 Berkeley Unix.
* supplementary group IDs:               Process Persona.
* SUSP character:                        Signal Characters.
* suspend character:                     Signal Characters.
* SVID:                                  SVID.
* swap space:                            Memory Concepts.
* symbolic link:                         Symbolic Links.
* symbolic link, opening:                Open-time Flags.
* synchronizing <1>:                     Synchronizing AIO Operations.
* synchronizing:                         Synchronizing I/O.
* syntax error messages, in argp:        Argp Helper Functions.
* syntax, for program arguments:         Argument Syntax.
* syntax, for reading numbers:           Parsing of Numbers.
* sysconf <1>:                           Processor Resources.
* sysconf:                               Query Memory Parameters.
* system call:                           System Calls.
* system call number:                    System Calls.
* System V Unix:                         SVID.
* TCP (Internet protocol):               Protocols Database.
* template, for printf:                  Formatted Output.
* template, for scanf:                   Formatted Input.
* TERM environment variable:             Standard Environment.
* terminal flow control:                 Line Control.
* terminal identification:               Is It a Terminal.
* terminal input queue:                  I/O Queues.
* terminal input queue, clearing:        Line Control.
* terminal input signal:                 Job Control Signals.
* terminal line control functions:       Line Control.
* terminal line speed:                   Line Speed.
* terminal mode data types:              Mode Data Types.
* terminal mode functions:               Mode Functions.
* terminal modes, BSD:                   BSD Terminal Modes.
* terminal output queue:                 I/O Queues.
* terminal output queue, flushing:       Line Control.
* terminal output signal:                Job Control Signals.
* terminated jobs, detecting:            Stopped and Terminated Jobs.
* termination signal:                    Termination Signals.
* testing access permission:             Testing File Access.
* testing exit status of child process:  Process Completion.
* text stream:                           Binary Streams.
* thrashing:                             Memory Subsystem.
* thread of control:                     Program Basics.
* threads:                               Streams and Threads.
* ticks, clock:                          Processor And CPU Time.
* tilde expansion:                       Expansion Stages.
* time:                                  Time Basics.
* TIME termios slot:                     Noncanonical Input.
* time zone:                             TZ Variable.
* time zone database:                    TZ Variable.
* time, elapsed:                         Time Basics.
* time, high precision:                  High Accuracy Clock.
* timer, profiling:                      Setting an Alarm.
* timer, real-time:                      Setting an Alarm.
* timer, virtual:                        Setting an Alarm.
* timers, setting:                       Setting an Alarm.
* timespec:                              Elapsed Time.
* timeval:                               Elapsed Time.
* timing error in signal handling:       Remembering a Signal.
* TMPDIR environment variable:           Temporary Files.
* tokenizing strings:                    Finding Tokens in a String.
* tools, for installing library:         Tools for Compilation.
* transmitting datagrams:                Sending Datagrams.
* tree, directory:                       Working with Directory Trees.
* triangulation:                         glibc iconv Implementation.
* trigonometric functions:               Trig Functions.
* type measurements, floating:           Floating Type Macros.
* type measurements, integer:            Width of Type.
* type modifier character (printf):      Output Conversion Syntax.
* type modifier character (scanf):       Input Conversion Syntax.
* typeahead buffer:                      I/O Queues.
* TZ environment variable:               Standard Environment.
* UCS-2:                                 Extended Char Intro.
* UCS-4:                                 Extended Char Intro.
* ulps:                                  Errors in Math Functions.
* umask:                                 Setting Permissions.
* unbuffered stream:                     Buffering Concepts.
* unconstrained memory allocation:       Unconstrained Allocation.
* undefining macros that shadow functions: Macro Definitions.
* underflow exception:                   FP Exceptions.
* Unicode:                               Extended Char Intro.
* Unix, Berkeley:                        Berkeley Unix.
* Unix, System V:                        SVID.
* unlinking a file:                      Deleting Files.
* unordered comparison:                  FP Comparison Functions.
* unreading characters:                  Unreading.
* upgrading from libc5:                  Linux.
* upper-case character <1>:              Classification of Wide Characters.
* upper-case character:                  Classification of Characters.
* urgent data signal:                    Asynchronous I/O Signals.
* urgent socket condition:               Out-of-Band Data.
* usage limits:                          Limits on Resources.
* usage messages, in argp:               Argp Helper Functions.
* user accounting database:              User Accounting Database.
* user database:                         User Database.
* user ID:                               User and Group IDs.
* user ID, determining:                  Who Logged In.
* user name:                             User and Group IDs.
* user signals:                          Miscellaneous Signals.
* usual file name errors:                File Name Errors.
* UTF-16:                                Extended Char Intro.
* UTF-7:                                 Extended Char Intro.
* UTF-8:                                 Extended Char Intro.
* va_copy:                               Copying and Concatenation.
* variable number of arguments:          Variadic Functions.
* variable substitution:                 Expansion Stages.
* variable-sized arrays:                 GNU C Variable-Size Arrays.
* variadic function argument access:     Receiving Arguments.
* variadic function prototypes:          Variadic Prototypes.
* variadic functions:                    Variadic Functions.
* variadic functions, calling:           Calling Variadics.
* virtual time alarm signal:             Alarm Signals.
* virtual timer:                         Setting an Alarm.
* volatile declarations:                 Nonreentrancy.
* waiting for a signal:                  Waiting for a Signal.
* waiting for completion of child process: Process Completion.
* waiting for input or output:           Waiting for I/O.
* WERASE character:                      Editing Characters.
* whitespace character <1>:              Classification of Wide Characters.
* whitespace character:                  Classification of Characters.
* wide character:                        Extended Char Intro.
* wide character string:                 Representation of Strings.
* width of integer type:                 Width of Type.
* wildcard expansion:                    Expansion Stages.
* wint_t:                                String/Array Conventions.
* word expansion:                        Word Expansion.
* working directory:                     Working Directory.
* write lock:                            File Locks.
* writing to a file descriptor:          I/O Primitives.
* writing to a socket:                   Transferring Data.
* writing to a stream, by blocks:        Block Input/Output.
* writing to a stream, by characters:    Simple Output.
* writing to a stream, formatted:        Formatted Output.
* YP:                                    Host Identification.
* YP domain name:                        Host Identification.
* zero divide:                           FP Exceptions.

